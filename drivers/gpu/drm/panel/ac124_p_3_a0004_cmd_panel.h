#ifndef PANEL_BOE_ILI7838E_H
#define PANEL_BOE_ILI7838E_H

enum MODE_ID {
	FHD_SDC60 = 0,
	FHD_SDC90 = 1,
	FHD_SDC120 = 2,
};

#define REGFLAG_CMD       0xFFFA
#define REGFLAG_DELAY       0xFFFC
#define REGFLAG_UDELAY  0xFFFB
#define REGFLAG_END_OF_TABLE    0xFFFD

struct LCM_setting_table {
	unsigned int cmd;
	unsigned int count;
	unsigned char para_list[128];
};

/* ------------------------- initial code start------------------------- */
static struct LCM_setting_table init_setting_60Hz[] = {
	/* last 1 bit esd check-burn code */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xC6, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xD2, 0x05}},
	/* open CRC_V line esd */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x02}},
	{REGFLAG_CMD, 2, {0xF8, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
	{REGFLAG_CMD, 2, {0xB3, 0x50}},
	{REGFLAG_CMD, 2, {0xB5, 0x03}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xD2, 0x01}},
	{REGFLAG_CMD, 2, {0xA1, 0x00}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x1F}},
	{REGFLAG_CMD, 6, {0x89, 0x11, 0x01, 0x00, 0xF0, 0x44}},
	/* Flash reload EN */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x21}},
	{REGFLAG_CMD, 2, {0xA4, 0x18}},
	/* Demura data select */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x19}},
	{REGFLAG_CMD, 2, {0xC5, 0x00}},
	/* Demura Setting */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x30}},
	{REGFLAG_CMD, 2, {0x87, 0x04}},
	{REGFLAG_CMD, 2, {0xAE, 0x01}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* OTP dont reload */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xC8, 0x62}},
	/* SPR on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x14}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* Round off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x17}},
	{REGFLAG_CMD, 2, {0xA0, 0x3D}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x13}},
	{REGFLAG_CMD, 2, {0xF9, 0x00}},
	/* IR Drop off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x95, 0x00}},
	/* DSC SETTING 10Bit 3.75 v1.1 */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x07}},
	{REGFLAG_CMD, 2, {0x8A, 0x01}},
	{REGFLAG_CMD, 3, {0x8B, 0x11, 0xE0}},
	{REGFLAG_CMD, 100, {0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0xab, \
                        0x30, 0x80, 0x09, 0x6c, 0x04, 0x38, 0x00, 0x0c, 0x02, 0x1c, \
                        0x02, 0x1c, 0x02, 0x00, 0x02, 0x0e, 0x00, 0x20, 0x01, 0x1f, \
                        0x00, 0x07, 0x00, 0x0c, 0x08, 0xbb, 0x08, 0x7a, 0x18, 0x00, \
                        0x10, 0xf0, 0x07, 0x10, 0x20, 0x00, 0x06, 0x0f, 0x0f, 0x33, \
                        0x0e, 0x1c, 0x2a, 0x38, 0x46, 0x54, 0x62, 0x69, 0x70, 0x77, \
                        0x79, 0x7b, 0x7d, 0x7e, 0x02, 0x02, 0x22, 0x00, 0x2a, 0x40, \
                        0x2a, 0xbe, 0x3a, 0xfc, 0x3a, 0xfa, 0x3a, 0xf8, 0x3b, 0x38, \
                        0x3b, 0x78, 0x3b, 0xb6, 0x4b, 0xb6, 0x4b, 0xf4, 0x4b, 0xf4, \
                        0x6c, 0x34, 0x84, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
        /* Frequence Transition 60Hz */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
	{REGFLAG_CMD, 2, {0x81, 0x05}},
	/* TE on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x35, 0x00}},
	/* Dimmig off */
	{REGFLAG_CMD, 2, {0x53, 0x20}},
	/* SleepOut+DELAY+DisplayOn */
	{REGFLAG_CMD, 1, {0x11}},
	/* Wait >120ms,Actual 120ms */
	{REGFLAG_DELAY, 120, {}},
	{REGFLAG_CMD, 1, {0x29}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table init_setting_90Hz[] = {
	/* last 1 bit esd check-burn code */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xC6, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xD2, 0x05}},
	/* open CRC_V line esd */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x02}},
	{REGFLAG_CMD, 2, {0xF8, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
	{REGFLAG_CMD, 2, {0xB3, 0x50}},
	{REGFLAG_CMD, 2, {0xB5, 0x03}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xD2, 0x01}},
	{REGFLAG_CMD, 2, {0xA1, 0x00}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x1F}},
	{REGFLAG_CMD, 6, {0x89, 0x11, 0x01, 0x00, 0xF0, 0x44}},
	/* Flash reload EN */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x21}},
	{REGFLAG_CMD, 2, {0xA4, 0x18}},
	/* Demura data select */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x19}},
	{REGFLAG_CMD, 2, {0xC5, 0x00}},
	/* Demura Setting */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x30}},
	{REGFLAG_CMD, 2, {0x87, 0x04}},
	{REGFLAG_CMD, 2, {0xAE, 0x01}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* OTP dont reload */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xC8, 0x62}},
	/* SPR on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x14}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* Round off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x17}},
	{REGFLAG_CMD, 2, {0xA0, 0x3D}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x13}},
	{REGFLAG_CMD, 2, {0xF9, 0x00}},
	/* IR Drop off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x95, 0x00}},
	/* DSC SETTING 10Bit 3.75 v1.1 */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x07}},
	{REGFLAG_CMD, 2, {0x8A, 0x01}},
	{REGFLAG_CMD, 3, {0x8B, 0x11, 0xE0}},
	{REGFLAG_CMD, 100, {0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0xab, \
                        0x30, 0x80, 0x09, 0x6c, 0x04, 0x38, 0x00, 0x0c, 0x02, 0x1c, \
                        0x02, 0x1c, 0x02, 0x00, 0x02, 0x0e, 0x00, 0x20, 0x01, 0x1f, \
                        0x00, 0x07, 0x00, 0x0c, 0x08, 0xbb, 0x08, 0x7a, 0x18, 0x00, \
                        0x10, 0xf0, 0x07, 0x10, 0x20, 0x00, 0x06, 0x0f, 0x0f, 0x33, \
                        0x0e, 0x1c, 0x2a, 0x38, 0x46, 0x54, 0x62, 0x69, 0x70, 0x77, \
                        0x79, 0x7b, 0x7d, 0x7e, 0x02, 0x02, 0x22, 0x00, 0x2a, 0x40, \
                        0x2a, 0xbe, 0x3a, 0xfc, 0x3a, 0xfa, 0x3a, 0xf8, 0x3b, 0x38, \
                        0x3b, 0x78, 0x3b, 0xb6, 0x4b, 0xb6, 0x4b, 0xf4, 0x4b, 0xf4, \
                        0x6c, 0x34, 0x84, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
        /* Frequence Transition 90Hz */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
	{REGFLAG_CMD, 2, {0x81, 0x04}},
	/* TE on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x35, 0x00}},
	/* Dimmig off */
	{REGFLAG_CMD, 2, {0x53, 0x20}},
	/* SleepOut+DELAY+DisplayOn */
	{REGFLAG_CMD, 1, {0x11}},
	/* Wait >120ms,Actual 120ms */
	{REGFLAG_DELAY, 120, {}},
	{REGFLAG_CMD, 1, {0x29}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table init_setting_120Hz[] = {
	/* last 1 bit esd check-burn code */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xC6, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xD2, 0x05}},
	/* open CRC_V line esd */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x02}},
	{REGFLAG_CMD, 2, {0xF8, 0x01}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
	{REGFLAG_CMD, 2, {0xB3, 0x50}},
	{REGFLAG_CMD, 2, {0xB5, 0x03}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x06}},
	{REGFLAG_CMD, 2, {0xD2, 0x01}},
	{REGFLAG_CMD, 2, {0xA1, 0x00}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x1F}},
	{REGFLAG_CMD, 6, {0x89, 0x11, 0x01, 0x00, 0xF0, 0x44}},
	/* Flash reload EN */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x21}},
	{REGFLAG_CMD, 2, {0xA4, 0x18}},
	/* Demura data select */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x19}},
	{REGFLAG_CMD, 2, {0xC5, 0x00}},
	/* Demura Setting */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x30}},
	{REGFLAG_CMD, 2, {0x87, 0x04}},
	{REGFLAG_CMD, 2, {0xAE, 0x01}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* OTP dont reload */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x08}},
	{REGFLAG_CMD, 2, {0xC8, 0x62}},
	/* SPR on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x14}},
	{REGFLAG_CMD, 2, {0x80, 0x01}},
	/* Round off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x17}},
	{REGFLAG_CMD, 2, {0xA0, 0x3D}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x13}},
	{REGFLAG_CMD, 2, {0xF9, 0x00}},
	/* IR Drop off */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x95, 0x00}},
	/* DSC SETTING 10Bit 3.75 v1.1 */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x07}},
	{REGFLAG_CMD, 2, {0x8A, 0x01}},
	{REGFLAG_CMD, 3, {0x8B, 0x11, 0xE0}},
	{REGFLAG_CMD, 100, {0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0xab, \
                        0x30, 0x80, 0x09, 0x6c, 0x04, 0x38, 0x00, 0x0c, 0x02, 0x1c, \
                        0x02, 0x1c, 0x02, 0x00, 0x02, 0x0e, 0x00, 0x20, 0x01, 0x1f, \
                        0x00, 0x07, 0x00, 0x0c, 0x08, 0xbb, 0x08, 0x7a, 0x18, 0x00, \
                        0x10, 0xf0, 0x07, 0x10, 0x20, 0x00, 0x06, 0x0f, 0x0f, 0x33, \
                        0x0e, 0x1c, 0x2a, 0x38, 0x46, 0x54, 0x62, 0x69, 0x70, 0x77, \
                        0x79, 0x7b, 0x7d, 0x7e, 0x02, 0x02, 0x22, 0x00, 0x2a, 0x40, \
                        0x2a, 0xbe, 0x3a, 0xfc, 0x3a, 0xfa, 0x3a, 0xf8, 0x3b, 0x38, \
                        0x3b, 0x78, 0x3b, 0xb6, 0x4b, 0xb6, 0x4b, 0xf4, 0x4b, 0xf4, \
                        0x6c, 0x34, 0x84, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
        /* Frequence Transition 120Hz */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
	{REGFLAG_CMD, 2, {0x81, 0x00}},
	/* TE on */
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
	{REGFLAG_CMD, 2, {0x35, 0x00}},
	/* Dimmig off */
	{REGFLAG_CMD, 2, {0x53, 0x20}},
	/* SleepOut+DELAY+DisplayOn */
	{REGFLAG_CMD, 1, {0x11}},
	/* Wait >120ms,Actual 120ms */
	{REGFLAG_DELAY, 120, {}},
	{REGFLAG_CMD, 1, {0x29}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};
/* ------------------------- initial code end------------------------- */

/* ------------------------- backlight setting start------------------------- */
static struct LCM_setting_table bl_level[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 3, {0x51, 0x07, 0xFF}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table esd_bl_level[] = {
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 3, {0x51, 0x07, 0xFF}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table HBM_on_setting[] = {
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 3, {0x51, 0x0F, 0xFF}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table HBM_off_setting[] = {
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 3, {0x51, 0x00, 0x00}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};
/* ------------------------- backlight setting end------------------------- */

/* -------------------------doze mode setting start------------------------- */
static struct LCM_setting_table AOD_off_setting[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 1, {0x38}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table AOD_on_setting[] = {
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 5, {0x51, 0x00, 0x00, 0x0D, 0xBB}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x05}},
        {REGFLAG_CMD, 2, {0x80, 0x19}},
        {REGFLAG_CMD, 10, {0xD0, 0xFF, 0xAF, 0x56, 0x3D, 0x2D, 0x2D, 0x2D, 0x2D, 0xFF}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 1, {0x39}},
        {REGFLAG_DELAY, 30, {}},
        {REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table aod_high_bl_level[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 5, {0x51, 0x00, 0x00, 0x0D, 0xBB}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table aod_low_bl_level[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x00}},
        {REGFLAG_CMD, 5, {0x51, 0x00, 0x00, 0x0A, 0xE0}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};
/* -------------------------doze mode setting end------------------------- */

/* -------------------------frame mode switch start------------------------- */
static struct LCM_setting_table mode_switch_to_60[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
        {REGFLAG_CMD, 2, {0x81, 0x05}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table mode_switch_to_90[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
        {REGFLAG_CMD, 2, {0x81, 0x04}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};

static struct LCM_setting_table mode_switch_to_120[] = {
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x2D}},
        {REGFLAG_CMD, 2, {0x81, 0x00}},
	{REGFLAG_CMD, 4, {0xFF, 0x08, 0x38, 0x20}},
};
/* -------------------------frame mode switch end------------------------- */
#endif
