/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2019 MediaTek Inc.
 */
/*****************************************************************************
 *
 * Filename:
 * ---------
 *	 ov48b2q_Sensor_setting.h
 *
 * Project:
 * --------
 * Description:
 * ------------
 *	 CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _OV48B2Q_SENSOR_SETTING_H
#define _OV48B2Q_SENSOR_SETTING_H

#define CPHY_3TRIO
#define SEAMLESS_SWITCH_V2
#define ROTATION_180

kal_uint16 addr_data_pair_xtalk_ov48b2q[] = {
	 0x53c0, 0x88,
	 0x53c1, 0x8b,
	 0x53c2, 0x8a,
	 0x53c3, 0x88,
	 0x53c4, 0x8b,
	 0x53c5, 0x8b,
	 0x53c6, 0x75,
	 0x53c7, 0x74,
	 0x53c8, 0x77,
	 0x53c9, 0x8a,
	 0x53ca, 0x8a,
	 0x53cb, 0x8b,
	 0x53cc, 0x76,
	 0x53cd, 0x71,
	 0x53ce, 0x71,
	 0x53cf, 0x8a,
	 0x53d0, 0x88,
	 0x53d1, 0x8e,
	 0x53d2, 0x71,
	 0x53d3, 0x71,
	 0x53d4, 0x70,
	 0x53d5, 0x8b,
	 0x53d6, 0x8e,
	 0x53d7, 0x8f,
	 0x53d8, 0x70,
	 0x53d9, 0x72,
	 0x53da, 0x7d,
	 0x53db, 0x77,
	 0x53dc, 0x8a,
	 0x53dd, 0x88,
	 0x53de, 0x72,
	 0x53df, 0x7f,
	 0x53e0, 0x7e,
	 0x53e1, 0x72,
	 0x53e2, 0x76,
	 0x53e3, 0x74,
	 0x53e4, 0x74,
	 0x53e5, 0x74,
	 0x53e6, 0x77,
	 0x53e7, 0x77,
	 0x53e8, 0x75,
	 0x53e9, 0x8a,
	 0x53ea, 0x75,
	 0x53eb, 0x74,
	 0x53ec, 0x77,
	 0x53ed, 0x71,
	 0x53ee, 0x77,
	 0x53ef, 0x77,
	 0x53f0, 0x88,
	 0x53f1, 0x8b,
	 0x53f2, 0x74,
	 0x53f3, 0x70,
	 0x53f4, 0x71,
	 0x53f5, 0x71,
	 0x53f6, 0x89,
	 0x53f7, 0x89,
	 0x53f8, 0x8b,
	 0x53f9, 0x71,
	 0x53fa, 0x76,
	 0x53fb, 0x71,
	 0x53fc, 0x8b,
	 0x53fd, 0x8a,
	 0x53fe, 0x76,
	 0x53ff, 0x7d,
	 0x5400, 0x73,
	 0x5401, 0x73,
	 0x5402, 0x74,
	 0x5403, 0x76,
	 0x5404, 0x7d,
	 0x5405, 0x79,
	 0x5406, 0x7f,
	 0x5407, 0x7d,
	 0x5408, 0x70,
	 0x5409, 0x73,
	 0x540a, 0x72,
	 0x540b, 0x76,
	 0x540c, 0x8a,
	 0x540d, 0x88,
	 0x540e, 0x77,
	 0x540f, 0x71,
	 0x5410, 0x76,
	 0x5411, 0x8b,
	 0x5412, 0x8e,
	 0x5413, 0x8f,
	 0x5414, 0x77,
	 0x5415, 0x76,
	 0x5416, 0x76,
	 0x5417, 0x88,
	 0x5418, 0x8f,
	 0x5419, 0x8d,
	 0x541a, 0x76,
	 0x541b, 0x71,
	 0x541c, 0x71,
	 0x541d, 0x8a,
	 0x541e, 0x88,
	 0x541f, 0x8e,
	 0x5420, 0x75,
	 0x5421, 0x77,
	 0x5422, 0x77,
	 0x5423, 0x8a,
	 0x5424, 0x75,
	 0x5425, 0x8b,
	 0x5426, 0x89,
	 0x5427, 0x88,
	 0x5428, 0x88,
	 0x5429, 0x88,
	 0x542a, 0x8a,
	 0x542b, 0x8b,
	 0x542c, 0x8a,
	 0x542d, 0x77,
	 0x542e, 0x72,
	 0x542f, 0x7f,
	 0x5430, 0x7c,
	 0x5431, 0x72,
	 0x5432, 0x88,
	 0x5433, 0x8b,
	 0x5434, 0x74,
	 0x5435, 0x70,
	 0x5436, 0x71,
	 0x5437, 0x71,
	 0x5438, 0x8e,
	 0x5439, 0x89,
	 0x543a, 0x8b,
	 0x543b, 0x76,
	 0x543c, 0x74,
	 0x543d, 0x76,
	 0x543e, 0x88,
	 0x543f, 0x8b,
	 0x5440, 0x75,
	 0x5441, 0x76,
	 0x5442, 0x77,
	 0x5443, 0x77,
	 0x5444, 0x8a,
	 0x5445, 0x74,
	 0x5446, 0x75,
	 0x5447, 0x77,
	 0x5448, 0x75,
	 0x5449, 0x75,
	 0x544a, 0x8b,
	 0x544b, 0x8b,
	 0x544c, 0x88,
	 0x544d, 0x88,
	 0x544e, 0x89,
	 0x544f, 0x89,
	 0x5450, 0x8f,
	 0x5451, 0x89,
	 0x5452, 0x8b,
	 0x5453, 0x8b,
	 0x5454, 0x77,
	 0x5455, 0x72,
	 0x5456, 0x89,
	 0x5457, 0x8a,
	 0x5458, 0x74,
	 0x5459, 0x8a,
	 0x545a, 0x76,
	 0x545b, 0x73,
	 0x545c, 0x89,
	 0x545d, 0x8a,
	 0x545e, 0x74,
	 0x545f, 0x75,
	 0x5460, 0x71,
	 0x5461, 0x73,
	 0x5462, 0x8e,
	 0x5463, 0x88,
	 0x5464, 0x88,
	 0x5465, 0x8e,
	 0x5466, 0x74,
	 0x5467, 0x71,
	 0x5468, 0x8e,
	 0x5469, 0x89,
	 0x546a, 0x8e,
	 0x546b, 0x8c,
	 0x546c, 0x88,
	 0x546d, 0x74,
	 0x546e, 0x8e,
	 0x546f, 0x89,
	 0x5470, 0x8e,
	 0x5471, 0x8c,
	 0x5472, 0x88,
	 0x5473, 0x74,
	 0x5474, 0x7f,
	 0x5475, 0x73,
	 0x5476, 0x77,
	 0x5477, 0x76,
	 0x5478, 0x75,
	 0x5479, 0x8b,
	 0x547a, 0x7c,
	 0x547b, 0x70,
	 0x547c, 0x77,
	 0x547d, 0x71,
	 0x547e, 0x77,
	 0x547f, 0x75,
	 0x5480, 0x7d,
	 0x5481, 0x70,
	 0x5482, 0x74,
	 0x5483, 0x71,
	 0x5484, 0x77,
	 0x5485, 0x75,
	 0x5486, 0x71,
	 0x5487, 0x75,
	 0x5488, 0x8e,
	 0x5489, 0x8a,
	 0x548a, 0x75,
	 0x548b, 0x8a,
	 0x548c, 0x77,
	 0x548d, 0x89,
	 0x548e, 0x8d,
	 0x548f, 0x89,
	 0x5490, 0x8b,
	 0x5491, 0x88,
	 0x5492, 0x77,
	 0x5493, 0x89,
	 0x5494, 0x8f,
	 0x5495, 0x89,
	 0x5496, 0x88,
	 0x5497, 0x8e,
	 0x5498, 0x8e,
	 0x5499, 0x89,
	 0x549a, 0x8c,
	 0x549b, 0x83,
	 0x549c, 0x8e,
	 0x549d, 0x8b,
	 0x549e, 0x8e,
	 0x549f, 0x88,
	 0x54a0, 0x8e,
	 0x54a1, 0x8d,
	 0x54a2, 0x89,
	 0x54a3, 0x8a,
	 0x54a4, 0x8e,
	 0x54a5, 0x88,
	 0x54a6, 0x88,
	 0x54a7, 0x8f,
	 0x54a8, 0x8a,
	 0x54a9, 0x76,
	 0x54aa, 0x8e,
	 0x54ab, 0x8b,
	 0x54ac, 0x74,
	 0x54ad, 0x8a,
	 0x54ae, 0x77,
	 0x54af, 0x71,
	 0x54b0, 0x8e,
	 0x54b1, 0x8b,
	 0x54b2, 0x75,
	 0x54b3, 0x8a,
	 0x54b4, 0x77,
	 0x54b5, 0x70,
	 0x54b6, 0x8f,
	 0x54b7, 0x88,
	 0x54b8, 0x8a,
	 0x54b9, 0x8a,
	 0x54ba, 0x76,
	 0x54bb, 0x73,
	 0x54bc, 0x8a,
	 0x54bd, 0x8e,
	 0x54be, 0x8d,
	 0x54bf, 0x88,
	 0x54c0, 0x8b,
	 0x54c1, 0x88,
	 0x54c2, 0x74,
	 0x54c3, 0x8e,
	 0x54c4, 0x8c,
	 0x54c5, 0x8b,
	 0x54c6, 0x8a,
	 0x54c7, 0x88,
	 0x54c8, 0x76,
	 0x54c9, 0x8a,
	 0x54ca, 0x8f,
	 0x54cb, 0x8b,
	 0x54cc, 0x8a,
	 0x54cd, 0x8b,
	 0x54ce, 0x73,
	 0x54cf, 0x76,
	 0x54d0, 0x8a,
	 0x54d1, 0x77,
	 0x54d2, 0x8a,
	 0x54d3, 0x88,
	 0x54d4, 0x73,
	 0x54d5, 0x77,
	 0x54d6, 0x8a,
	 0x54d7, 0x74,
	 0x54d8, 0x8b,
	 0x54d9, 0x89,
	 0x54da, 0x73,
	 0x54db, 0x76,
	 0x54dc, 0x8a,
	 0x54dd, 0x8a,
	 0x54de, 0x88,
	 0x54df, 0x8f,
	 0x5500, 0x7E,
	 0x5501, 0x7C,
	 0x5502, 0x75,
	 0x5503, 0x8A,
	 0x5504, 0x82,
	 0x5505, 0x8E,
	 0x5506, 0x75,
	 0x5507, 0x7E,
	 0x5508, 0x71,
	 0x5509, 0x8A,
	 0x550A, 0x87,
	 0x550B, 0x8E,
	 0x550C, 0x83,
	 0x550D, 0x77,
	 0x550E, 0x89,
	 0x550F, 0x89,
	 0x5510, 0x87,
	 0x5511, 0x88,
	 0x5512, 0x83,
	 0x5513, 0x8A,
	 0x5514, 0x8E,
	 0x5515, 0x8E,
	 0x5516, 0x8D,
	 0x5517, 0x7D,
	 0x5518, 0x8D,
	 0x5519, 0x75,
	 0x551A, 0x8B,
	 0x551B, 0x77,
	 0x551C, 0x8E,
	 0x551D, 0x89,
	 0x551E, 0x8B,
	 0x551F, 0x71,
	 0x5520, 0x7D,
	 0x5521, 0x7A,
	 0x5522, 0x75,
	 0x5523, 0x89,
	 0x5524, 0x80,
	 0x5525, 0x8B,
	 0x5526, 0x7A,
	 0x5527, 0x7A,
	 0x5528, 0x66,
	 0x5529, 0x7F,
	 0x552A, 0x8C,
	 0x552B, 0x81,
	 0x552C, 0x76,
	 0x552D, 0x7D,
	 0x552E, 0x65,
	 0x552F, 0x71,
	 0x5530, 0x8A,
	 0x5531, 0x8D,
	 0x5532, 0x71,
	 0x5533, 0x71,
	 0x5534, 0x7C,
	 0x5535, 0x89,
	 0x5536, 0x75,
	 0x5537, 0x89,
	 0x5538, 0x70,
	 0x5539, 0x71,
	 0x553A, 0x76,
	 0x553B, 0x86,
	 0x553C, 0x75,
	 0x553D, 0x8E,
	 0x553E, 0x71,
	 0x553F, 0x8A,
	 0x5540, 0x74,
	 0x5541, 0x75,
	 0x5542, 0x89,
	 0x5543, 0x8D,
	 0x5544, 0x8E,
	 0x5545, 0x86,
	 0x5546, 0x88,
	 0x5547, 0x8A,
	 0x5548, 0x7E,
	 0x5549, 0x8B,
	 0x554A, 0x9E,
	 0x554B, 0x9E,
	 0x554C, 0x9E,
	 0x554D, 0x80,
	 0x554E, 0x7B,
	 0x554F, 0x7F,
	 0x5550, 0x8D,
	 0x5551, 0x80,
	 0x5552, 0x87,
	 0x5553, 0x88,
	 0x5554, 0x78,
	 0x5555, 0x79,
	 0x5556, 0x8B,
	 0x5557, 0x88,
	 0x5558, 0x89,
	 0x5559, 0x70,
	 0x555A, 0x79,
	 0x555B, 0x7D,
	 0x555C, 0x89,
	 0x555D, 0x88,
	 0x555E, 0x75,
	 0x555F, 0x7F,
	 0x5560, 0x7C,
	 0x5561, 0x72,
	 0x5562, 0x8E,
	 0x5563, 0x75,
	 0x5564, 0x75,
	 0x5565, 0x74,
	 0x5566, 0x7C,
	 0x5567, 0x73,
	 0x5568, 0x8A,
	 0x5569, 0x73,
	 0x556A, 0x74,
	 0x556B, 0x74,
	 0x556C, 0x8F,
	 0x556D, 0x88,
	 0x556E, 0x8B,
	 0x556F, 0x89,
	 0x5570, 0x76,
	 0x5571, 0x8B,
	 0x5572, 0x81,
	 0x5573, 0x80,
	 0x5574, 0x8A,
	 0x5575, 0x77,
	 0x5576, 0x73,
	 0x5577, 0x83,
	 0x5578, 0x87,
	 0x5579, 0x99,
	 0x557A, 0x8D,
	 0x557B, 0x8C,
	 0x557C, 0x8F,
	 0x557D, 0x93,
	 0x557E, 0x8D,
	 0x557F, 0x84,
	 0x5580, 0x8D,
	 0x5581, 0x8C,
	 0x5582, 0x8D,
	 0x5583, 0x91,
	 0x5584, 0x86,
	 0x5585, 0x81,
	 0x5586, 0x89,
	 0x5587, 0x89,
	 0x5588, 0x75,
	 0x5589, 0x86,
	 0x558A, 0x83,
	 0x558B, 0x8D,
	 0x558C, 0x72,
	 0x558D, 0x70,
	 0x558E, 0x70,
	 0x558F, 0x8B,
	 0x5590, 0x7F,
	 0x5591, 0x79,
	 0x5592, 0x7B,
	 0x5593, 0x65,
	 0x5594, 0x75,
	 0x5595, 0x88,
	 0x5596, 0x7E,
	 0x5597, 0x7B,
	 0x5598, 0x7D,
	 0x5599, 0x76,
	 0x559A, 0x83,
	 0x559B, 0x8A,
	 0x559C, 0x72,
	 0x559D, 0x7A,
	 0x559E, 0x72,
	 0x559F, 0x70,
	 0x55A0, 0x8E,
	 0x55A1, 0x7F,
	 0x55A2, 0x74,
	 0x55A3, 0x7C,
	 0x55A4, 0x73,
	 0x55A5, 0x71,
	 0x55A6, 0x8A,
	 0x55A7, 0x79,
	 0x55A8, 0x72,
	 0x55A9, 0x72,
	 0x55AA, 0x76,
	 0x55AB, 0x71,
	 0x55AC, 0x8C,
	 0x55AD, 0x74,
	 0x55AE, 0x71,
	 0x55AF, 0x76,
	 0x55B0, 0x8C,
	 0x55B1, 0x8F,
	 0x55B2, 0x86,
	 0x55B3, 0x83,
	 0x55B4, 0x83,
	 0x55B5, 0x85,
	 0x55B6, 0x98,
	 0x55B7, 0x98,
	 0x55B8, 0x74,
	 0x55B9, 0x79,
	 0x55BA, 0x8C,
	 0x55BB, 0x80,
	 0x55BC, 0x80,
	 0x55BD, 0x8F,
	 0x55BE, 0x7B,
	 0x55BF, 0x65,
	 0x55C0, 0x75,
	 0x55C1, 0x8F,
	 0x55C2, 0x88,
	 0x55C3, 0x8A,
	 0x55C4, 0x7B,
	 0x55C5, 0x78,
	 0x55C6, 0x71,
	 0x55C7, 0x8A,
	 0x55C8, 0x88,
	 0x55C9, 0x8A,
	 0x55CA, 0x7E,
	 0x55CB, 0x7F,
	 0x55CC, 0x8A,
	 0x55CD, 0x8B,
	 0x55CE, 0x8B,
	 0x55CF, 0x88,
	 0x55D0, 0x78,
	 0x55D1, 0x7B,
	 0x55D2, 0x74,
	 0x55D3, 0x8A,
	 0x55D4, 0x76,
	 0x55D5, 0x74,
	 0x55D6, 0x7B,
	 0x55D7, 0x67,
	 0x55D8, 0x75,
	 0x55D9, 0x8A,
	 0x55DA, 0x71,
	 0x55DB, 0x65,
	 0x55DC, 0x74,
	 0x55DD, 0x89,
	 0x55DE, 0x8F,
	 0x55DF, 0x75,
	 0x55E0, 0x88,
	 0x55E1, 0x76,
	 0x55E2, 0x89,
	 0x55E3, 0x88,
	 0x55E4, 0x83,
	 0x55E5, 0x8A,
	 0x55E6, 0x8B,
	 0x55E7, 0x8B,
	 0x55E8, 0x8F,
	 0x55E9, 0x7C,
	 0x55EA, 0x81,
	 0x55EB, 0x75,
	 0x55EC, 0x8E,
	 0x55ED, 0x88,
	 0x55EE, 0x83,
	 0x55EF, 0x76,
	 0x55F0, 0x8F,
	 0x55F1, 0x72,
	 0x55F2, 0x71,
	 0x55F3, 0x8B,
	 0x55F4, 0x9A,
	 0x55F5, 0x8F,
	 0x55F6, 0x71,
	 0x55F7, 0x70,
	 0x55F8, 0x75,
	 0x55F9, 0x88,
	 0x55FA, 0x86,
	 0x55FB, 0x82,
	 0x55FC, 0x8C,
	 0x55FD, 0x88,
	 0x55FE, 0x8B,
	 0x55FF, 0x84,
	 0x5600, 0x89,
	 0x5601, 0x75,
	 0x5602, 0x8A,
	 0x5603, 0x88,
	 0x5604, 0x70,
	 0x5605, 0x8A,
	 0x5606, 0x75,
	 0x5607, 0x8B,
	 0x5608, 0x74,
	 0x5609, 0x8E,
	 0x560A, 0x76,
	 0x560B, 0x77,
	 0x560C, 0x77,
	 0x560D, 0x87,
	 0x560E, 0x74,
	 0x560F, 0x8D,
	 0x5610, 0x71,
	 0x5611, 0x77,
	 0x5612, 0x71,
	 0x5613, 0x83,
	 0x5614, 0x8B,
	 0x5615, 0x83,
	 0x5616, 0x74,
	 0x5617, 0x7D,
	 0x5618, 0x64,
	 0x5619, 0x71,
	 0x561A, 0x8F,
	 0x561B, 0x75,
	 0x561C, 0x7E,
	 0x561D, 0x7B,
	 0x561E, 0x66,
	 0x561F, 0x7E,
	 0x5620, 0x7E,
	 0x5621, 0x76,
	 0x5622, 0x88,
	 0x5623, 0x73,
	 0x5624, 0x74,
	 0x5625, 0x75,
	 0x5626, 0x7C,
	 0x5627, 0x73,
	 0x5628, 0x8F,
	 0x5629, 0x8A,
	 0x562A, 0x75,
	 0x562B, 0x77,
	 0x562C, 0x7E,
	 0x562D, 0x7C,
	 0x562E, 0x88,
	 0x562F, 0x8B,
	 0x5630, 0x74,
	 0x5631, 0x7E,
	 0x5632, 0x78,
	 0x5633, 0x79,
	 0x5634, 0x8A,
	 0x5635, 0x75,
	 0x5636, 0x75,
	 0x5637, 0x7C,
	 0x5638, 0x78,
	 0x5639, 0x7F,
	 0x563A, 0x8F,
	 0x563B, 0x83,
	 0x563C, 0x86,
	 0x563D, 0x8B,
	 0x563E, 0x7C,
	 0x563F, 0x8B,
	 0x5640, 0x85,
	 0x5641, 0x9B,
	 0x5642, 0x98,
	 0x5643, 0x82,
	 0x5644, 0x86,
	 0x5645, 0x8F,
	 0x5646, 0x73,
	 0x5647, 0x77,
	 0x5648, 0x74,
	 0x5649, 0x88,
	 0x564A, 0x81,
	 0x564B, 0x86,
	 0x564C, 0x89,
	 0x564D, 0x8F,
	 0x564E, 0x8B,
	 0x564F, 0x84,
	 0x5650, 0x8F,
	 0x5651, 0x87,
	 0x5652, 0x8C,
	 0x5653, 0x8E,
	 0x5654, 0x8D,
	 0x5655, 0x93,
	 0x5656, 0x84,
	 0x5657, 0x98,
	 0x5658, 0x8F,
	 0x5659, 0x8F,
	 0x565A, 0x8C,
	 0x565B, 0x94,
	 0x565C, 0x83,
	 0x565D, 0x81,
	 0x565E, 0x8A,
	 0x565F, 0x71,
	 0x5660, 0x77,
	 0x5661, 0x84,
	 0x5662, 0x82,
	 0x5663, 0x8F,
	 0x5664, 0x8A,
	 0x5665, 0x88,
	 0x5666, 0x8B,
	 0x5667, 0x8F,
	 0x5668, 0x72,
	 0x5669, 0x77,
	 0x566A, 0x8F,
	 0x566B, 0x8A,
	 0x566C, 0x8D,
	 0x566D, 0x8C,
	 0x566E, 0x73,
	 0x566F, 0x7D,
	 0x5670, 0x71,
	 0x5671, 0x72,
	 0x5672, 0x8E,
	 0x5673, 0x77,
	 0x5674, 0x8A,
	 0x5675, 0x7C,
	 0x5676, 0x70,
	 0x5677, 0x71,
	 0x5678, 0x8A,
	 0x5679, 0x7F,
	 0x567A, 0x72,
	 0x567B, 0x79,
	 0x567C, 0x71,
	 0x567D, 0x71,
	 0x567E, 0x88,
	 0x567F, 0x7B,
	 0x5680, 0x72,
	 0x5681, 0x78,
	 0x5682, 0x70,
	 0x5683, 0x8A,
	 0x5684, 0x8D,
	 0x5685, 0x76,
	 0x5686, 0x79,
	 0x5687, 0x78,
	 0x5688, 0x7E,
	 0x5689, 0x7E,
	 0x568A, 0x74,
	 0x568B, 0x75,
	 0x568C, 0x8A,
	 0x568D, 0x8A,
	 0x568E, 0x74,
	 0x568F, 0x8B,
	 0x5690, 0x7E,
	 0x5691, 0x65,
	 0x5692, 0x8A,
	 0x5693, 0x88,
	 0x5694, 0x88,
	 0x5695, 0x8E,
	 0x5696, 0x79,
	 0x5697, 0x7B,
	 0x5698, 0x70,
	 0x5699, 0x75,
	 0x569A, 0x8B,
	 0x569B, 0x8A,
	 0x569C, 0x7E,
	 0x569D, 0x79,
	 0x569E, 0x74,
	 0x569F, 0x88,
	 0x56A0, 0x8A,
	 0x56A1, 0x74,
	 0x56A2, 0x7B,
	 0x56A3, 0x7E,
	 0x56A4, 0x8B,
	 0x56A5, 0x82,
	 0x56A6, 0x8D,
	 0x56A7, 0x88,
	 0x56A8, 0x7B,
	 0x56A9, 0x7A,
	 0x56AA, 0x83,
	 0x56AB, 0x84,
	 0x56AC, 0x9A,
	 0x56AD, 0x84,
	 0x56AE, 0x76,
	 0x56AF, 0x7E,
	 0x56B0, 0x7C,
	 0x56B1, 0x76,
	 0x56B2, 0x8F,
	 0x56B3, 0x82,
	 0x56B4, 0x88,
	 0x56B5, 0x74,
	 0x56B6, 0x73,
	 0x56B7, 0x7D,
	 0x56B8, 0x70,
	 0x56B9, 0x8B,
	 0x56BA, 0x8E,
	 0x56BB, 0x73,
	 0x56BC, 0x74,
	 0x56BD, 0x70,
	 0x56BE, 0x8B,
	 0x56BF, 0x89,
	 0x56C0, 0x75,
	 0x56C1, 0x7B,
	 0x56C2, 0x70,
	 0x56C3, 0x72,
	 0x56C4, 0x73,
	 0x56C5, 0x76,
	 0x56C6, 0x7D,
	 0x56C7, 0x6D,
	 0x56C8, 0x76,
	 0x56C9, 0x8B,
	 0x56CA, 0x82,
	 0x56CB, 0x8C,
	 0x56CC, 0x75,
	 0x56CD, 0x78,
	 0x56CE, 0x89,
	 0x56CF, 0x8E,
	 0x56D0, 0x83,
	 0x56D1, 0x8D,
	 0x56D2, 0x8A,
	 0x56D3, 0x8A,
	 0x56D4, 0x8E,
	 0x56D5, 0x8E,
	 0x56D6, 0x8E,
	 0x56D7, 0x8B,
	 0x56D8, 0x8F,
	 0x56D9, 0x82,
	 0x56DA, 0x77,
	 0x56DB, 0x8F,
	 0x56DC, 0x80,
	 0x56DD, 0x8E,
	 0x56DE, 0x8A,
	 0x56DF, 0x82,
	 0x56E0, 0x78,
	 0x56E1, 0x76,
	 0x56E2, 0x74,
	 0x56E3, 0x74,
	 0x56E4, 0x74,
	 0x56E5, 0x81,
	 0x56E6, 0x7E,
	 0x56E7, 0x76,
	 0x56E8, 0x8E,
	 0x56E9, 0x88,
	 0x56EA, 0x8C,
	 0x56EB, 0x99,
	 0x56EC, 0x7E,
	 0x56ED, 0x7F,
	 0x56EE, 0x73,
	 0x56EF, 0x71,
	 0x56F0, 0x8A,
	 0x56F1, 0x86,
	 0x56F2, 0x7A,
	 0x56F3, 0x7F,
	 0x56F4, 0x73,
	 0x56F5, 0x76,
	 0x56F6, 0x8B,
	 0x56F7, 0x75,
	 0x56F8, 0x77,
	 0x56F9, 0x7F,
	 0x56FA, 0x65,
	 0x56FB, 0x65,
	 0x56FC, 0x65,
	 0x56FD, 0x78,
	 0x56FE, 0x8C,
	 0x56FF, 0x76,
	 0x5700, 0x7A,
	 0x5701, 0x79,
	 0x5702, 0x73,
	 0x5703, 0x70,
	 0x5704, 0x98,
	 0x5705, 0x82,
	 0x5706, 0x75,
	 0x5707, 0x77,
	 0x5708, 0x8B,
	 0x5709, 0x77,
	 0x570A, 0x99,
	 0x570B, 0x81,
	 0x570C, 0x74,
	 0x570D, 0x77,
	 0x570E, 0x77,
	 0x570F, 0x73,
	 0x5710, 0x99,
	 0x5711, 0x85,
	 0x5712, 0x8E,
	 0x5713, 0x8A,
	 0x5714, 0x8A,
	 0x5715, 0x77,
	 0x5716, 0x9E,
	 0x5717, 0x86,
	 0x5718, 0x8B,
	 0x5719, 0x74,
	 0x571A, 0x8A,
	 0x571B, 0x89,
	 0x571C, 0x71,
	 0x571D, 0x77,
	 0x571E, 0x89,
	 0x571F, 0x88,
	 0x5720, 0x72,
	 0x5721, 0x7C,
	 0x5722, 0x7C,
	 0x5723, 0x76,
	 0x5724, 0x73,
	 0x5725, 0x7E,
	 0x5726, 0x7B,
	 0x5727, 0x70,
	 0x5728, 0x7B,
	 0x5729, 0x72,
	 0x572A, 0x73,
	 0x572B, 0x70,
	 0x572C, 0x7C,
	 0x572D, 0x75,
	 0x572E, 0x62,
	 0x572F, 0x64,
	 0x5730, 0x78,
	 0x5731, 0x79,
	 0x5732, 0x79,
	 0x5733, 0x77,
	 0x5734, 0x66,
	 0x5735, 0x7C,
	 0x5736, 0x74,
	 0x5737, 0x8B,
	 0x5738, 0x7D,
	 0x5739, 0x72,
	 0x573A, 0x72,
	 0x573B, 0x70,
	 0x573C, 0x8B,
	 0x573D, 0x88,
	 0x573E, 0x70,
	 0x573F, 0x73,
	 0x5740, 0x83,
	 0x5741, 0x83,
	 0x5742, 0x8F,
	 0x5743, 0x8C,
	 0x5744, 0x8F,
	 0x5745, 0x8A,
	 0x5746, 0x81,
	 0x5747, 0x8C,
	 0x5748, 0x80,
	 0x5749, 0x84,
	 0x574A, 0x8D,
	 0x574B, 0x72,
	 0x574C, 0x86,
	 0x574D, 0x8E,
	 0x574E, 0x8F,
	 0x574F, 0x88,
	 0x5750, 0x77,
	 0x5751, 0x64,
	 0x5752, 0x99,
	 0x5753, 0x86,
	 0x5754, 0x80,
	 0x5755, 0x8D,
	 0x5756, 0x77,
	 0x5757, 0x64,
	 0x5758, 0x9B,
	 0x5759, 0x82,
	 0x575A, 0x8B,
	 0x575B, 0x77,
	 0x575C, 0x70,
	 0x575D, 0x7E,
	 0x575E, 0x8D,
	 0x575F, 0x8D,
	 0x5760, 0x8B,
	 0x5761, 0x74,
	 0x5762, 0x70,
	 0x5763, 0x7F,
	 0x5764, 0x78,
	 0x5765, 0x64,
	 0x5766, 0x65,
	 0x5767, 0x7A,
	 0x5768, 0x72,
	 0x5769, 0x88,
	 0x576A, 0x7D,
	 0x576B, 0x7F,
	 0x576C, 0x7B,
	 0x576D, 0x7A,
	 0x576E, 0x77,
	 0x576F, 0x81,
	 0x5770, 0x71,
	 0x5771, 0x77,
	 0x5772, 0x70,
	 0x5773, 0x74,
	 0x5774, 0x80,
	 0x5775, 0x9C,
	 0x5776, 0x7D,
	 0x5777, 0x73,
	 0x5778, 0x73,
	 0x5779, 0x74,
	 0x577A, 0x87,
	 0x577B, 0x93,
	 0x577C, 0x72,
	 0x577D, 0x71,
	 0x577E, 0x76,
	 0x577F, 0x89,
	 0x5780, 0x85,
	 0x5781, 0x9D,
	 0x5782, 0x76,
	 0x5783, 0x70,
	 0x5784, 0x70,
	 0x5785, 0x8A,
	 0x5786, 0x87,
	 0x5787, 0x9F,
	 0x5788, 0x89,
	 0x5789, 0x8F,
	 0x578A, 0x8B,
	 0x578B, 0x8B,
	 0x578C, 0x88,
	 0x578D, 0x8A,
	 0x578E, 0x70,
	 0x578F, 0x88,
	 0x5790, 0x8C,
	 0x5791, 0x8C,
	 0x5792, 0x74,
	 0x5793, 0x78,
	 0x5794, 0x73,
	 0x5795, 0x72,
	 0x5796, 0x73,
	 0x5797, 0x76,
	 0x5798, 0x7F,
	 0x5799, 0x6D,
	 0x579A, 0x76,
	 0x579B, 0x71,
	 0x579C, 0x8A,
	 0x579D, 0x8B,
	 0x579E, 0x71,
	 0x579F, 0x61,
	 0x57A0, 0x74,
	 0x57A1, 0x72,
	 0x57A2, 0x70,
	 0x57A3, 0x8B,
	 0x57A4, 0x88,
	 0x57A5, 0x79,
	 0x57A6, 0x70,
	 0x57A7, 0x77,
	 0x57A8, 0x8B,
	 0x57A9, 0x8E,
	 0x57AA, 0x88,
	 0x57AB, 0x76,
	 0x57AC, 0x65,
	 0x57AD, 0x7F,
	 0x57AE, 0x88,
	 0x57AF, 0x88,
	 0x57B0, 0x75,
	 0x57B1, 0x75,
	 0x57B2, 0x7F,
	 0x57B3, 0x7F,
	 0x57B4, 0x70,
	 0x57B5, 0x76,
	 0x57B6, 0x8A,
	 0x57B7, 0x81,
	 0x57B8, 0x7F,
	 0x57B9, 0x77,
	 0x57BA, 0x89,
	 0x57BB, 0x88,
	 0x57BC, 0x8D,
	 0x57BD, 0x99,
	 0x57BE, 0x79,
	 0x57BF, 0x71,
	 0x57C0, 0x77,
	 0x57C1, 0x74,
	 0x57C2, 0x8B,
	 0x57C3, 0x9A,
	 0x57C4, 0x7C,
	 0x57C5, 0x88,
	 0x57C6, 0x82,
	 0x57C7, 0x8B,
	 0x57C8, 0x75,
	 0x57C9, 0x86,
	 0x57CA, 0x74,
	 0x57CB, 0x8B,
	 0x57CC, 0x8F,
	 0x57CD, 0x88,
	 0x57CE, 0x8B,
	 0x57CF, 0x8F,
	 0x57D0, 0x9C,
	 0x57D1, 0x86,
	 0x57D2, 0x76,
	 0x57D3, 0x71,
	 0x57D4, 0x8A,
	 0x57D5, 0x89,
	 0x57D6, 0x98,
	 0x57D7, 0x85,
	 0x57D8, 0x89,
	 0x57D9, 0x8A,
	 0x57DA, 0x8A,
	 0x57DB, 0x77,
	 0x57DC, 0x99,
	 0x57DD, 0x80,
	 0x57DE, 0x74,
	 0x57DF, 0x77,
	 0x57E0, 0x76,
	 0x57E1, 0x73,
	 0x57E2, 0x98,
	 0x57E3, 0x83,
	 0x57E4, 0x8A,
	 0x57E5, 0x75,
	 0x57E6, 0x8A,
	 0x57E7, 0x71,
	 0x57E8, 0x86,
	 0x57E9, 0x75,
	 0x57EA, 0x7E,
	 0x57EB, 0x7D,
	 0x57EC, 0x76,
	 0x57ED, 0x73,
	 0x57EE, 0x88,
	 0x57EF, 0x70,
	 0x57F0, 0x7B,
	 0x57F1, 0x79,
	 0x57F2, 0x7F,
	 0x57F3, 0x7D,
	 0x57F4, 0x8A,
	 0x57F5, 0x77,
	 0x57F6, 0x71,
	 0x57F7, 0x74,
	 0x57F8, 0x71,
	 0x57F9, 0x70,
	 0x57FA, 0x7F,
	 0x57FB, 0x71,
	 0x57FC, 0x75,
	 0x57FD, 0x75,
	 0x57FE, 0x71,
	 0x57FF, 0x7C,
	 0x5800, 0x66,
	 0x5801, 0x7B,
	 0x5802, 0x79,
	 0x5803, 0x7B,
	 0x5804, 0x7B,
	 0x5805, 0x72,
	 0x5806, 0x7B,
	 0x5807, 0x72,
	 0x5808, 0x72,
	 0x5809, 0x72,
	 0x580A, 0x7C,
	 0x580B, 0x74,
	 0x580C, 0x7B,
	 0x580D, 0x71,
	 0x580E, 0x70,
	 0x580F, 0x79,
	 0x5810, 0x7A,
	 0x5811, 0x72,
	 0x5812, 0x7C,
	 0x5813, 0x77,
	 0x5814, 0x8A,
	 0x5815, 0x74,
	 0x5816, 0x7C,
	 0x5817, 0x78,
	 0x5818, 0x8A,
	 0x5819, 0x8E,
	 0x581A, 0x8D,
	 0x581B, 0x88,
	 0x581C, 0x70,
	 0x581D, 0x7E,
	 0x581E, 0x82,
	 0x581F, 0x89,
	 0x5820, 0x8B,
	 0x5821, 0x74,
	 0x5822, 0x7C,
	 0x5823, 0x7F,
	 0x5824, 0x9A,
	 0x5825, 0x80,
	 0x5826, 0x83,
	 0x5827, 0x83,
	 0x5828, 0x75,
	 0x5829, 0x7B,
	 0x582A, 0x81,
	 0x582B, 0x88,
	 0x582C, 0x8F,
	 0x582D, 0x89,
	 0x582E, 0x76,
	 0x582F, 0x64,
	 0x5830, 0x84,
	 0x5831, 0x8E,
	 0x5832, 0x8D,
	 0x5833, 0x87,
	 0x5834, 0x8D,
	 0x5835, 0x72,
	 0x5836, 0x86,
	 0x5837, 0x8C,
	 0x5838, 0x8C,
	 0x5839, 0x8C,
	 0x583A, 0x8E,
	 0x583B, 0x89,
	 0x583C, 0x8B,
	 0x583D, 0x77,
	 0x583E, 0x72,
	 0x583F, 0x74,
	 0x5840, 0x87,
	 0x5841, 0x9C,
	 0x5842, 0x77,
	 0x5843, 0x74,
	 0x5844, 0x77,
	 0x5845, 0x88,
	 0x5846, 0x98,
	 0x5847, 0x9C,
	 0x5848, 0x73,
	 0x5849, 0x71,
	 0x584A, 0x70,
	 0x584B, 0x74,
	 0x584C, 0x86,
	 0x584D, 0x92,
	 0x584E, 0x77,
	 0x584F, 0x75,
	 0x5850, 0x76,
	 0x5851, 0x74,
	 0x5852, 0x81,
	 0x5853, 0x9D,
	 0x5854, 0x7D,
	 0x5855, 0x72,
	 0x5856, 0x7E,
	 0x5857, 0x79,
	 0x5858, 0x75,
	 0x5859, 0x86,
	 0x585A, 0x79,
	 0x585B, 0x78,
	 0x585C, 0x7B,
	 0x585D, 0x78,
	 0x585E, 0x71,
	 0x585F, 0x8B,
};

kal_uint16 addr_data_pair_init_ov48b2q[] = {
	 0x0102, 0x01,
	 0x0301, 0xc8,//bit[3]: pll_divpix
	 0x0302, 0x31,
	 0x0303, 0x03,
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xf8,//pll_divp[7:0]
	 0x0306, 0x04,//3: 3-trio, 4: 4-lane
	 0x0309, 0x52,
	 0x0320, 0x12,
	 0x0323, 0x03,
	 0x0324, 0x01,
	 0x0325, 0xe0,
	 0x0326, 0xd9,
	 0x0327, 0x0a,
	 0x0329, 0x01,
	 0x032a, 0x07,
	 0x032b, 0x02,
	 0x032f, 0x0c,
	 0x0343, 0x03,
	 0x0344, 0x01,
	 0x0345, 0x04,
	 0x0346, 0xc0,
	 0x0349, 0x01,
	 0x0350, 0x01,
	 0x034b, 0x00,
	 0x034a, 0x05,
	 0x0361, 0x00,
	 0x3010, 0x01,
	 0x3012, 0x41,
	 0x3016, 0xf0,
	 0x3018, 0xf0,
	 0x3019, 0xd2,
	 0x301b, 0x16,
	 0x3022, 0xd0,
	 0x3025, 0x03,
	 0x3026, 0x00,
	 0x3027, 0x00,
	 0x3028, 0xc3,
	 0x3107, 0x0a,
	 0x3200, 0x00,
	 0x3201, 0x16,
	 0x3202, 0x2c,
	 0x3203, 0x42,
	 0x3204, 0x58,
	 0x3205, 0x5a,
	 0x3223, 0x5b,
	 0x3224, 0x5c,
	 0x3225, 0x5d,
	 0x3226, 0x5e,
	 0x3216, 0x00,
	 0x3218, 0x00,
	 0x3400, 0x04,
	 0x3406, 0x20,
	 0x340c, 0xff,
	 0x340e, 0xff,
	 0x3421, 0x08,
	 0x3423, 0x15,
	 0x3424, 0x40,
	 0x3425, 0x10,
	 0x3426, 0x11,
	 0x3501, 0x0b,
	 0x3502, 0x00,
	 0x3504, 0x08,
	 0x3508, 0x03,
	 0x3509, 0x00,
	 0x350a, 0x01,
	 0x350b, 0x00,
	 0x350c, 0x00,
	 0x3602, 0x00,
	 0x3603, 0x00,
	 0x3607, 0x01,
	 0x3608, 0x35,
	 0x3609, 0x80,
	 0x360a, 0x00,
	 0x360b, 0x7f,
	 0x3618, 0x2a,
	 0x3619, 0x90,
	 0x361b, 0x2a,
	 0x361c, 0x90,
	 0x361d, 0x98,
	 0x361e, 0x07,
	 0x3621, 0x08,
	 0x3622, 0x11,
	 0x3623, 0x08,
	 0x3624, 0x18,
	 0x3626, 0xf9,
	 0x3627, 0x11,
	 0x3628, 0x88,
	 0x3629, 0x0d,
	 0x362c, 0x77,
	 0x362e, 0x00,
	 0x3631, 0xf2,
	 0x3632, 0xf2,
	 0x3633, 0x08,
	 0x3634, 0x08,
	 0x3635, 0x28,
	 0x3636, 0x28,
	 0x3637, 0xcc,
	 0x3638, 0xcc,
	 0x3639, 0xc0,
	 0x363a, 0x52,
	 0x363b, 0x0b,
	 0x363c, 0x13,
	 0x363e, 0x47,
	 0x363d, 0x25,
	 0x363f, 0x08,
	 0x3643, 0x00,
	 0x3644, 0x40,
	 0x3680, 0x00,
	 0x3683, 0x00,
	 0x3684, 0x07,
	 0x3685, 0x12,
	 0x3688, 0x00,
	 0x3689, 0x27,
	 0x368a, 0x3a,
	 0x368b, 0x04,
	 0x368e, 0x0f,
	 0x3700, 0x2e,
	 0x3701, 0x08,
	 0x3702, 0x46,
	 0x3703, 0x35,
	 0x3704, 0x06,
	 0x3705, 0x00,
	 0x3706, 0x2a,
	 0x3707, 0x08,
	 0x3708, 0x3a,
	 0x3709, 0x7a,
	 0x370a, 0x00,
	 0x370b, 0x62,
	 0x370c, 0x0b,
	 0x3711, 0x00,
	 0x3712, 0x50,
	 0x3713, 0x00,
	 0x3714, 0x63,
	 0x3716, 0x44,
	 0x3717, 0x02,
	 0x3718, 0x14,
	 0x3719, 0x11,
	 0x371a, 0x1c,
	 0x371b, 0xd0,
	 0x371c, 0x04,
	 0x371d, 0x22,
	 0x371e, 0x13,
	 0x371f, 0x0b,
	 0x3720, 0x08,
	 0x3721, 0x15,
	 0x3722, 0x05,
	 0x3723, 0x00,
	 0x3724, 0x08,
	 0x3725, 0x32,
	 0x3727, 0x22,
	 0x3728, 0x11,
	 0x372a, 0x00,
	 0x372b, 0x8a,
	 0x3730, 0x00,
	 0x3731, 0x00,
	 0x3732, 0x06,
	 0x3733, 0x06,
	 0x3734, 0x06,
	 0x3735, 0x06,
	 0x3736, 0x0a,
	 0x3737, 0x02,
	 0x3738, 0x0a,
	 0x3739, 0x02,
	 0x373a, 0x0a,
	 0x373b, 0x20,
	 0x373c, 0x0a,
	 0x373d, 0x26,
	 0x373e, 0x0a,
	 0x373f, 0x28,
	 0x3740, 0x06,
	 0x3741, 0x04,
	 0x3742, 0x06,
	 0x3743, 0x0a,
	 0x3744, 0x16,
	 0x3745, 0x0a,
	 0x3746, 0x16,
	 0x3747, 0x50,
	 0x3748, 0x00,
	 0x3749, 0xf0,
	 0x374a, 0x02,
	 0x374b, 0x02,
	 0x374c, 0x08,
	 0x374d, 0x03,
	 0x374e, 0x05,
	 0x374f, 0x08,
	 0x3751, 0x07,
	 0x3752, 0x02,
	 0x3753, 0x01,
	 0x3754, 0x66,
	 0x3758, 0x03,
	 0x375b, 0x00,
	 0x375c, 0x00,
	 0x375d, 0x02,
	 0x375e, 0x02,
	 0x3760, 0x08,
	 0x3761, 0x10,
	 0x3762, 0x08,
	 0x3763, 0x08,
	 0x3764, 0x08,
	 0x3765, 0x10,
	 0x3766, 0x18,
	 0x3767, 0x28,
	 0x3768, 0x00,
	 0x3769, 0x08,
	 0x376a, 0x10,
	 0x376b, 0x00,
	 0x376d, 0x1b,
	 0x3770, 0x30,
	 0x3773, 0x42,
	 0x3774, 0x10,
	 0x3775, 0x00,
	 0x3776, 0x12,
	 0x3777, 0x14,
	 0x3778, 0x0e,
	 0x3779, 0x22,
	 0x377a, 0x24,
	 0x377b, 0x46,
	 0x377c, 0x14,
	 0x377d, 0x04,
	 0x377e, 0x16,
	 0x377f, 0x04,
	 0x379b, 0x10,
	 0x379c, 0x10,
	 0x379d, 0x10,
	 0x379e, 0x30,
	 0x379f, 0x30,
	 0x37a0, 0x0c,
	 0x37a1, 0x0c,
	 0x37a2, 0x04,
	 0x37a3, 0x0c,
	 0x37a4, 0x04,
	 0x37a5, 0x00,
	 0x37a6, 0x00,
	 0x37a7, 0x18,
	 0x37a8, 0x0a,
	 0x37a9, 0x08,
	 0x37aa, 0x08,
	 0x37ab, 0x0d,
	 0x37ac, 0x14,
	 0x37ad, 0x14,
	 0x37ae, 0x14,
	 0x37b0, 0x40,
	 0x37b1, 0x40,
	 0x37b2, 0x30,
	 0x37b3, 0x46,
	 0x37b4, 0x46,
	 0x37b5, 0x36,
	 0x37b6, 0x00,
	 0x37b7, 0x00,
	 0x37b8, 0x00,
	 0x37b9, 0x00,
	 0x37ba, 0x00,
	 0x37bc, 0x00,
	 0x37bd, 0x00,
	 0x37be, 0x00,
	 0x37bf, 0x00,
	 0x37c0, 0x03,
	 0x37c1, 0x02,
	 0x37c2, 0x06,
	 0x37c3, 0x04,
	 0x37c4, 0x01,
	 0x37c5, 0x06,
	 0x37c8, 0x04,
	 0x37c9, 0x04,
	 0x37ca, 0xf9,
	 0x37cb, 0x10,
	 0x37cc, 0xf0,
	 0x37cd, 0x02,
	 0x37ce, 0x0a,
	 0x37cf, 0x02,
	 0x37d0, 0x0a,
	 0x37d1, 0x02,
	 0x37d2, 0x0a,
	 0x37d3, 0x02,
	 0x37d4, 0x00,
	 0x37d5, 0x10,
	 0x37d6, 0x01,
	 0x37d7, 0x44,
	 0x37d8, 0x06,
	 0x37d9, 0x00,
	 0x37da, 0x10,
	 0x37dc, 0x06,
	 0x37de, 0x02,
	 0x37df, 0x80,
	 0x37e0, 0x03,
	 0x37e1, 0x04,
	 0x37e2, 0x06,
	 0x37e3, 0x18,
	 0x37e4, 0x0a,
	 0x37e5, 0x16,
	 0x37e6, 0x0a,
	 0x37e7, 0x16,
	 0x37e8, 0x0a,
	 0x37e9, 0x1c,
	 0x37eb, 0x06,
	 0x37ec, 0x06,
	 0x37ed, 0x0a,
	 0x37ee, 0x02,
	 0x37f0, 0x0a,
	 0x37f1, 0x02,
	 0x37f2, 0x0a,
	 0x37f3, 0x02,
	 0x37f6, 0x03,
	 0x37f7, 0x02,
	 0x37f8, 0x3c,
	 0x37f9, 0x02,
	 0x37fa, 0x02,
	 0x37fb, 0x02,
	 0x37fc, 0x00,
	 0x37fd, 0x00,
	 0x37fe, 0x00,
	 0x37ff, 0x00,
	 0x3800, 0x00,
	 0x3801, 0x00,
	 0x3802, 0x00,
	 0x3803, 0x00,
	 0x3804, 0x1f,
	 0x3805, 0x5f,
	 0x3806, 0x17,
	 0x3807, 0x8f,
	 0x3808, 0x0f,
	 0x3809, 0xa0,
	 0x380a, 0x0b,
	 0x380b, 0xb8,
	 0x380c, 0x04,
	 0x380d, 0x50,
	 0x380e, 0x0d,
	 0x380f, 0x96,
	 0x3810, 0x00,
	 0x3811, 0x09,
	 0x3812, 0x00,
	 0x3813, 0x08,
	 0x3814, 0x11,
	 0x3815, 0x11,
	 0x3816, 0x01,
	 0x3817, 0x10,
	 0x3818, 0x01,
	 0x3819, 0x00,
	 0x381a, 0x1B,
	 0x381b, 0x1C,
	 0x381c, 0x01,
	 0x381d, 0x14,
	 0x381f, 0x02,
	 0x3820, 0x02,
	 0x3821, 0x06,
	 0x3822, 0x10,
	 0x3823, 0x04,
	 0x3824, 0x01,
	 0x3825, 0x14,
	 0x3826, 0x1B,
	 0x3827, 0x1C,
	 0x3837, 0x18,
	 0x383a, 0x00,
	 0x383b, 0x00,
	 0x383c, 0x00,
	 0x383d, 0x09,
	 0x383e, 0x0c,
	 0x383f, 0x33,
	 0x3840, 0x00,
	 0x3841, 0x00,
	 0x3848, 0x12,
	 0x3849, 0x40,
	 0x384a, 0x0d,
	 0x384b, 0xb0,
	 0x3854, 0x11,
	 0x3855, 0x11,
	 0x3856, 0x20,
	 0x3857, 0x04,
	 0x3858, 0x40,
	 0x3859, 0x08,
	 0x3860, 0x20,
	 0x3a01, 0x7f,
	 0x3d85, 0x8b,
	 0x3d8c, 0x77,
	 0x3d8d, 0xa0,
	 0x3dab, 0x10,
	 0x3dac, 0x05,
	 0x3dad, 0x8b,
	 0x3dae, 0x05,
	 0x3daf, 0x8f,
	 0x3f01, 0x12,
	 0x4002, 0x13,
	 0x4009, 0x01,
	 0x400e, 0xc6,
	 0x4010, 0xe8,
	 0x4011, 0x01,
	 0x4012, 0x7d,
	 0x4015, 0x00,
	 0x4016, 0x0f,
	 0x4017, 0x00,
	 0x4018, 0x03,
	 0x401a, 0x40,
	 0x401b, 0x10,
	 0x401e, 0x01,
	 0x401f, 0xaa,
	 0x4020, 0x04,
	 0x4021, 0x00,
	 0x4022, 0x04,
	 0x4023, 0x00,
	 0x4024, 0x04,
	 0x4025, 0x00,
	 0x4026, 0x04,
	 0x4027, 0x00,
	 0x4028, 0x01,
	 0x4030, 0x00,
	 0x4031, 0x04,
	 0x4032, 0x00,
	 0x4033, 0x04,
	 0x4034, 0x00,
	 0x4035, 0x04,
	 0x4036, 0x00,
	 0x4037, 0x04,
	 0x4040, 0x00,
	 0x4041, 0x00,
	 0x4042, 0x00,
	 0x4043, 0x00,
	 0x4044, 0x00,
	 0x4045, 0x00,
	 0x4046, 0x00,
	 0x4047, 0x00,
	 0x4056, 0x25,
	 0x4500, 0x04,
	 0x4502, 0x10,
	 0x4510, 0x00,
	 0x4512, 0x00,
	 0x4513, 0x00,
	 0x4514, 0x00,
	 0x4515, 0x00,
	 0x4516, 0x55,
	 0x4517, 0x55,
	 0x4518, 0x55,
	 0x4519, 0x55,
	 0x451a, 0x11,
	 0x451b, 0xbb,
	 0x451c, 0x11,
	 0x451d, 0xbb,
	 0x451e, 0x11,
	 0x451f, 0xbb,
	 0x4520, 0x11,
	 0x4521, 0xbb,
	 0x4522, 0x00,
	 0x4523, 0x00,
	 0x4524, 0x00,
	 0x4525, 0x00,
	 0x4526, 0x00,
	 0x4600, 0x00,
	 0x4601, 0xc8,
	 0x4603, 0x17,
	 0x4641, 0x3e,
	 0x4643, 0x0c,
	 0x4800, 0x64,
	 0x480e, 0x04,
	 0x4810, 0x00,
	 0x4811, 0x02,
	 0x4815, 0x2b,
	 0x481e, 0x6f,
	 0x481f, 0x47,
	 0x4826, 0x42,
	 0x4837, 0x0d,
	 0x4853, 0x04,
	 0x484b, 0x27,
	 0x4850, 0x40,
	 0x4858, 0x05,
	 0x4860, 0x00,
	 0x4861, 0xec,
	 0x4862, 0x04,
	 0x4883, 0x00,
	 0x4888, 0x90,
	 0x4889, 0x03,
	 0x4a00, 0x10,
	 0x4d00, 0x04,
	 0x4d01, 0x49,
	 0x4d02, 0xbf,
	 0x4d03, 0xfb,
	 0x4d04, 0x2a,
	 0x4d05, 0x9b,
	 0x5000, 0xcd,
	 0x5001, 0x23,
	 0x5002, 0x9e,
	 0x5003, 0x92,
	 0x5004, 0x01,
	 0x5006, 0x00,
	 0x5015, 0x02,
	 0x501d, 0x00,
	 0x5051, 0x14,
	 0x5080, 0x00,
	 0x5081, 0x00,
	 0x5180, 0x00,
	 0x5181, 0x10,
	 0x5182, 0x05,
	 0x5183, 0x8f,
	 0x5184, 0x01,
	 0x5185, 0x0b,
	 0x5187, 0x00,
	 0x5188, 0x08,
	 0x5198, 0x08,
	 0x518c, 0x02,
	 0x518d, 0x06,
	 0x518e, 0x02,
	 0x518f, 0x06,
	 0x5200, 0x6f,
	 0x52a5, 0x08,
	 0x522a, 0x44,
	 0x522b, 0x44,
	 0x5300, 0x7b,
	 0x5308, 0x44,
	 0x5310, 0x00,
	 0x5311, 0x01,
	 0x5312, 0x01,
	 0x5313, 0x02,
	 0x5314, 0x04,
	 0x5315, 0x06,
	 0x5316, 0x08,
	 0x5317, 0x0a,
	 0x5318, 0x0c,
	 0x5319, 0x0e,
	 0x531a, 0x10,
	 0x531b, 0x12,
	 0x531c, 0x14,
	 0x531d, 0x16,
	 0x531e, 0x18,
	 0x533d, 0x00,
	 0x5380, 0x0f,
	 0x5860, 0x00,
	 0x5880, 0x81,
	 0x5881, 0x10,
	 0x5882, 0x10,
	 0x5883, 0x10,
	 0x5884, 0x10,
	 0x5885, 0x10,
	 0x5886, 0x10,
	 0x5887, 0x10,
	 0x588a, 0x00,
	 0x58cb, 0x03,
	 0x5c00, 0x41,
	 0x5c01, 0x04,
	 0x5c02, 0x00,
	 0x5c03, 0x41,
	 0x5c16, 0x00,
	 0x5c17, 0x50,
	 0x5c18, 0x00,
	 0x5c19, 0x50,
	 0x5c1a, 0x00,
	 0x5c1b, 0x50,
	 0x5c1c, 0x00,
	 0x5c1d, 0x50,
	 0x5c1e, 0x00,
	 0x5c1f, 0x50,
	 0x5c20, 0x00,
	 0x5c21, 0x50,
	 0x5c22, 0x00,
	 0x5c23, 0x50,
	 0x5c24, 0x00,
	 0x5c25, 0x50,
	 0x5c26, 0x00,
	 0x5c27, 0x50,
	 0x5c28, 0x00,
	 0x5c29, 0x50,
	 0x5c2a, 0x00,
	 0x5c2b, 0x50,
	 0x5c2c, 0x00,
	 0x5c2d, 0x50,
	 0x5c2e, 0x02,
	 0x5c2f, 0x03,
	 0x5c36, 0x0a,
	 0x5c37, 0x0b,
	 0x5c44, 0x08,
	 0x5c45, 0x07,
	 0x5c46, 0x06,
	 0x5c47, 0x05,
	 0x5c48, 0x0a,
	 0x5c49, 0x02,
	 0x5c4a, 0x01,
	 0x5c4b, 0x09,
	 0x5c4c, 0x0c,
	 0x5c4d, 0x04,
	 0x5c4e, 0x03,
	 0x5c4f, 0x0b,
	 0x5c50, 0x10,
	 0x5c51, 0x0f,
	 0x5c52, 0x0e,
	 0x5c53, 0x0d,
	 0x5c54, 0x10,
	 0x5c55, 0x10,
	 0x5c56, 0x04,
	 0x5c57, 0x0c,
	 0x5c58, 0x04,
	 0x5c59, 0x0c,
	 0x5c5a, 0x04,
	 0x5c5b, 0x0c,
	 0x5c5c, 0x04,
	 0x5c5d, 0x0c,
	 0x5c5e, 0x01,
	 0x5c5f, 0x01,
	 0x5c68, 0x02,
	 0x5c69, 0x03,
	 0x5c6a, 0x03,
	 0x5c6b, 0x02,
	 0x5c6c, 0x40,
	 0x5c6d, 0x02,
	 0x5c7a, 0x42,
	 0x5c7b, 0x24,
	 0x5d00, 0x66,
	 0x5d01, 0x08,
	 0x5d02, 0x84,
	 0x5d03, 0x04,
	 0x5d05, 0x02,
	 0x5d08, 0x08,
	 0x5d09, 0x08,
	 0x5d0a, 0x02,
	 0x5d0b, 0x06,
	 0x5d0c, 0x02,
	 0x5d0d, 0x06,
	 0x5d0e, 0x02,
	 0x5d0f, 0x06,
	 0x5d10, 0x02,
	 0x5d11, 0x06,
	 0x5d12, 0x00,
	 0x5d13, 0x00,
	 0x5d14, 0xff,
	 0x5d15, 0x10,
	 0x5d16, 0x10,
	 0x5d17, 0x10,
	 0x5d18, 0x10,
	 0x5d19, 0xff,
	 0x5d1a, 0x10,
	 0x5d1b, 0x10,
	 0x5d1c, 0x10,
	 0x5d1d, 0x10,
	 0x5d1e, 0x04,
	 0x5d1f, 0x04,
	 0x5d20, 0x04,
	 0x5d21, 0xff,
	 0x5d27, 0x64,
	 0x5d28, 0xc8,
	 0x5d29, 0x96,
	 0x5d2a, 0xff,
	 0x5d2b, 0xc8,
	 0x5d2c, 0xff,
	 0x5d2d, 0x04,
	 0x5d37, 0x08,
	 0x5d38, 0x1f,
	 0x5d39, 0x60,
	 0x5d3a, 0x17,
	 0x5d3b, 0x80,
	 0x5d80, 0x21,
	 0x5d85, 0x19,
	 0x5d88, 0x04,
	 0x5d89, 0x0c,
	 0x5d8a, 0x04,
	 0x5d8b, 0x0c,
	 0x5d8c, 0x04,
	 0x5d8d, 0x0c,
	 0x5d8e, 0x04,
	 0x5d8f, 0x0c,
	 0x5d90, 0x01,
	 0x5d91, 0x01,
	 0x5db0, 0x0f,
	 0x5ec1, 0x08,
	 0x5ec2, 0x04,
	 0x5ec3, 0x0c,
	 0x5ec4, 0x04,
	 0x5ec5, 0x0c,
	 0x5ec6, 0x02,
	 0x5ec7, 0x06,
	 0x5ec8, 0x02,
	 0x5ec9, 0x06,
	 0x5eca, 0x01,
	 0x5ecb, 0x00,
	 0x5ece, 0x00,
	 0x5ecf, 0x04,
	 0x5e40, 0x03,
	 0x5ea0, 0x11,
	 0x382a, 0x81,//for long exp
	 0x0100, 0x00,//stream off
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xb4,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x10,//pclk_period[7:0], global timing for 0.864Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
};

/* Binning 4000*3000@60fps PD disabled */
kal_uint16 addr_data_pair_preview_ov48b2q[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x034b, 0x00,
	0x0350, 0x00,
	0x3501, 0x0b,
	0x3502, 0x68,
	0x3608, 0x35,
	0x3622, 0x10,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x02,
	0x3689, 0x07,
	0x368e, 0x00,
	0x3703, 0x3a,
	0x3706, 0x2A,
	0x3709, 0x9A,
	0x370b, 0x6a,
	0x3712, 0x50,
	0x3714, 0x61,
	0x3729, 0x00,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x00,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x17,
	0x3807, 0x8f,
	0x3808, 0x0F,
	0x3809, 0xA0,
	0x380a, 0x0B,
	0x380b, 0xB8,
	0x380c, 0x02,
	0x380d, 0x40,
	0x380e, 0x0d,
	0x380f, 0x05,
	0x3810, 0x00,
	0x3811, 0x09,
	0x3812, 0x00,
	0x3813, 0x04,
	0x3814, 0x11,
	0x3815, 0x11,
	0x3820, 0x02,
	0x3821, 0x14,
	0x3822, 0x00,
	0x3837, 0x0b,
	0x383d, 0x09,
	0x3856, 0x10,
	0x3857, 0x04,
	0x3858, 0x20,
	0x3859, 0x08,
	0x4002, 0xd3,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC8,
	0x4641, 0x1f,
	0x4643, 0x08,
	0x480e, 0x00,
	0x4837, 0x06,
	0x484b, 0x07,
	0x4850, 0x43,
	0x5000, 0x89,
	0x5001, 0x03,
	0x5002, 0x9E,
	0x5004, 0x01,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c01, 0x04,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x01,
	0x0305, 0xea,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x01,//pll_divp[9:8]
	 0x0305, 0x22,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x0b,//pclk_period[7:0], global timing for 1.392Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* mirror on */
	 0x3680, 0x04,
	 0x5004, 0x03,
	 0x5c01, 0x05,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x03,
	 0x3820, 0x06,
	 0x3821, 0x10,
#endif
};

kal_uint16 addr_data_pair_capture_ov48b2q[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x01,
	0x3500, 0x00,
	0x3501, 0x0b,
	0x3502, 0x68,
	0x3608, 0x35,
	0x3622, 0x11,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x0F,
	0x3703, 0x35,
	0x3706, 0x2A,
	0x3709, 0x7A,
	0x370b, 0x62,
	0x3712, 0x50,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x00,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x17,
	0x3807, 0x8f,
	0x3808, 0x0F,
	0x3809, 0xA0,
	0x380a, 0x0B,
	0x380b, 0xB8,
	0x380c, 0x04,
	0x380d, 0xb0,
	0x380e, 0x0c,
	0x380f, 0x80,
	0x3811, 0x09,
	0x3813, 0x08,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x02,
	0x3821, 0x06,
	0x3822, 0x10,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x18,
	0x383d, 0x09,
	0x3840, 0x00,
	0x3856, 0x20,
	0x3857, 0x04,
	0x3858, 0x40,
	0x3859, 0x08,
	0x4002, 0x13,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC8,
	0x4641, 0x3E,
	0x4643, 0x0C,
	0x480e, 0x04,
	0x484b, 0x27,
	0x5000, 0xcD,
	0x5001, 0x23,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x00,
	0x0305, 0xf8,
	0x4837, 0x0d,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x09,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x06,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_capture_15fps_ov48b2q[] = {
	0x0345, 0x04,
	0x034b, 0x00,
	0x0350, 0x00,
	0x3501, 0x16,
	0x3502, 0xF4,
	0x3608, 0x57,
	0x3622, 0x10,
	0x3624, 0x10,
	0x3639, 0xC8,
	0x363b, 0x09,
	0x363e, 0x45,
	0x363d, 0x23,
	0x3684, 0x02,
	0x3689, 0x07,
	0x368e, 0x00,
	0x3703, 0x4C,
	0x3706, 0x34,
	0x3709, 0x74,
	0x370b, 0x74,
	0x3712, 0x51,
	0x3714, 0x63,
	0x3729, 0x00,
	0x373b, 0x40,
	0x373d, 0x46,
	0x375d, 0x0A,
	0x375e, 0x0A,
	0x37b2, 0x40,
	0x37b5, 0x46,
	0x37b7, 0x06,
	0x37b8, 0x08,
	0x37ba, 0x06,
	0x37bc, 0x08,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x00,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x17,
	0x3807, 0x8f,
	0x3808, 0x1F,
	0x3809, 0x40,
	0x380a, 0x17,
	0x380b, 0x70,
	0x380c, 0x06,
	0x380d, 0xC0,
	0x380e, 0x1A,
	0x380f, 0x0A,
	0x3811, 0x11,
	0x3813, 0x10,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x34,
	0x381b, 0x04,
	0x381c, 0x01,
	0x381d, 0xb0,
	0x3820, 0x00,
	0x3821, 0x06,
	0x3822, 0x00,
	0x3824, 0x01,
	0x3825, 0xb0,
	0x3826, 0x34,
	0x3827, 0x04,
	0x3837, 0x2C,
	0x383d, 0x11,
	0x3857, 0x08,
	0x3859, 0x10,
	0x4002, 0xD3,
	0x4016, 0x1F,
	0x4018, 0x0F,
	0x4510, 0x07,
	0x4600, 0x01,
	0x4601, 0x90,
	0x4643, 0x08,
	0x480e, 0x00,
	0x484b, 0x07,
	0x5000, 0xCB,
	0x5001, 0x43,
	0x5002, 0x9e,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5198, 0x08,
	0x5300, 0x7B,
	0x533d, 0x02,
	0x5c00, 0x45,
	0x5c03, 0x41,
	0x5c44, 0x08,
	0x5c45, 0x07,
	0x5c46, 0x06,
	0x5c47, 0x05,
	0x5c48, 0x0A,
	0x5c49, 0x02,
	0x5c4a, 0x01,
	0x5c4c, 0x0C,
	0x5c4d, 0x04,
	0x5c4e, 0x03,
	0x5c4f, 0x0B,
	0x5c50, 0x10,
	0x5c51, 0x0F,
	0x5c52, 0x0E,
	0x5c53, 0x0D,
	0x5c54, 0x10,
	0x5c55, 0x10,
	0x5c56, 0x04,
	0x5c57, 0x0C,
	0x5c58, 0x04,
	0x5c59, 0x0C,
	0x5c5a, 0x04,
	0x5c5b, 0x0C,
	0x5c5c, 0x04,
	0x5c5d, 0x0C,
	0x5c5e, 0x01,
	0x5c5f, 0x01,
	0x5c6d, 0x09,
	0x5d00, 0x67,
	0x0305, 0x75,
	0x4837, 0x08,
	0x0304, 0x01,
	0x4850, 0x43,
};

kal_uint16 addr_data_pair_video_ov48b2q[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x01,
	0x3500, 0x00,
	0x3501, 0x09,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x11,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x0F,
	0x3703, 0x35,
	0x3706, 0x2A,
	0x3709, 0x7A,
	0x370b, 0x62,
	0x3712, 0x50,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x02,
	0x3803, 0xf0,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x14,
	0x3807, 0x9f,
	0x3808, 0x0F,
	0x3809, 0xA0,
	0x380a, 0x08,
	0x380b, 0xD0,
	0x380c, 0x04,
	0x380d, 0xb0,
	0x380e, 0x0c,
	0x380f, 0x80,
	0x3811, 0x09,
	0x3813, 0x04,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x02,
	0x3821, 0x06,
	0x3822, 0x10,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x18,
	0x383d, 0x09,
	0x3840, 0x00,
	0x3856, 0x20,
	0x3857, 0x00,
	0x3858, 0x40,
	0x3859, 0x00,
	0x4002, 0x13,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC8,
	0x4641, 0x3E,
	0x4643, 0x0C,
	0x480e, 0x04,
	0x484b, 0x27,
	0x5000, 0xcD,
	0x5001, 0x23,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x00,
	0x0305, 0xf8,
	0x4837, 0x0d,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x05,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x06,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_hs_video_ov48b2q[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x034b, 0x00,
	0x0350, 0x00,
	0x3501, 0x03,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x10,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3684, 0x02,
	0x3689, 0x07,
	0x368e, 0x00,
	0x3703, 0x3A,
	0x3706, 0x2A,
	0x3709, 0x9A,
	0x370b, 0x6A,
	0x3712, 0x50,
	0x3714, 0x61,
	0x3729, 0x00,
	0x372b, 0x76,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x05,
	0x3801, 0xA0,
	0x3802, 0x06,
	0x3803, 0x20,
	0x3804, 0x19,
	0x3805, 0xBF,
	0x3806, 0x11,
	0x3807, 0x6F,
	0x3808, 0x05,
	0x3809, 0x00,
	0x380A, 0x02,
	0x380B, 0xd0,
	0x380c, 0x04,
	0x380d, 0x80,
	0x380e, 0x03,
	0x380f, 0x41,
	0x3811, 0x05,
	0x3813, 0x02,
	0x3814, 0x11,
	0x3815, 0x31,
	0x3820, 0x03,
	0x3821, 0x14,
	0x3822, 0x10,
	0x3837, 0x07,
	0x383d, 0x04,
	0x3856, 0x20,
	0x3857, 0x04,
	0x3858, 0x40,
	0x3859, 0x08,
	0x4002, 0xD3,
	0x4010, 0xe8,
	0x4016, 0x07,
	0x4018, 0x01,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0x40,
	0x4641, 0x3e,
	0x4643, 0x08,
	0x480e, 0x00,
	0x484b, 0x07,
	0x4850, 0x40,
	0x5000, 0xa9,
	0x5001, 0x03,
	0x5002, 0x9e,
	0x5185, 0x0B,
	0x5187, 0x88,
	0x5188, 0x18,
	0x5198, 0x88,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x00,
	0x5d0f, 0x02,
	0x5d10, 0x04,
	0x0304, 0x00,
	0x0305, 0xa6,//800Mbps
	0x4837, 0x14,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3811, 0x04,
	 0x3813, 0x01,
	 0x383D, 0x03,
	 0x3820, 0x07,
	 0x3821, 0x10,
#endif
};

kal_uint16 addr_data_pair_slim_video_ov48b2q[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x01,
	0x3500, 0x00,
	0x3501, 0x09,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x11,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x0F,
	0x3703, 0x35,
	0x3706, 0x2A,
	0x3709, 0x7A,
	0x370b, 0x62,
	0x3712, 0x50,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x01,
	0x3803, 0x90,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x15,
	0x3807, 0xff,
	0x3808, 0x0F,
	0x3809, 0xA0,
	0x380a, 0x0A,
	0x380b, 0x28,
	0x380c, 0x04,
	0x380d, 0xb0,
	0x380e, 0x0c,
	0x380f, 0x80,
	0x3811, 0x09,
	0x3813, 0x08,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x02,
	0x3821, 0x06,
	0x3822, 0x10,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x18,
	0x383d, 0x09,
	0x3840, 0x00,
	0x3856, 0x20,
	0x3857, 0x04,
	0x3858, 0x40,
	0x3859, 0x08,
	0x4002, 0x13,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC8,
	0x4641, 0x3E,
	0x4643, 0x0C,
	0x480e, 0x04,
	0x484b, 0x27,
	0x5000, 0xcD,
	0x5001, 0x23,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x00,
	0x0305, 0xf8,
	0x4837, 0x0d,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x09,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x06,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_custom1[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x034b, 0x00,
	0x0350, 0x00,
	0x3500, 0x00,
	0x3501, 0x0e,
	0x3502, 0x00,
	0x3608, 0x57,
	0x3622, 0x11,
	0x3624, 0x10,
	0x3639, 0xC8,
	0x363b, 0x09,
	0x363d, 0x23,
	0x363e, 0x45,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x00,
	0x3703, 0x35,
	0x3706, 0x2a,
	0x3709, 0x7a,
	0x370b, 0x62,
	0x3712, 0x51,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x40,
	0x373d, 0x46,
	0x375d, 0x0A,
	0x375e, 0x0A,
	0x37b2, 0x40,
	0x37b5, 0x46,
	0x37b7, 0x06,
	0x37b8, 0x08,
	0x37ba, 0x06,
	0x37bc, 0x08,
	0x3800, 0x7,
	0x3801, 0xD0,
	0x3802, 0x5,
	0x3803, 0xE0,
	0x3804, 0x17,
	0x3805, 0x8F,
	0x3806, 0x11,
	0x3807, 0xAF,
	0x3808, 0xF,
	0x3809, 0xA0,
	0x380a, 0xB,
	0x380b, 0xB8,
	0x380c, 0x04,//04
	0x380d, 0xb0,//20
	0x380e, 0x0c,//0e
	0x380f, 0x80,//34
	0x3811, 0x11,
	0x3813, 0x0C,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x00,
	0x3821, 0x06,
	0x3822, 0x00,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x2C,
	0x383d, 0x11,
	0x3840, 0x00,
	0x3856, 0x10,
	0x3857, 0x04,
	0x3858, 0x20,
	0x3859, 0x08,
	0x4002, 0xD3,
	0x4010, 0xF8,
	0x4016, 0x1F,
	0x4018, 0x0F,
	0x4510, 0x07,
	0x4600, 0x00,
	0x4601, 0xc8,
	0x4641, 0x1f,
	0x4643, 0x08,
	0x480e, 0x04,
	0x484b, 0x27,
	0x4850, 0x43,
	0x5000, 0xCB,
	0x5001, 0x43,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x5300, 0x7B,
	0x533d, 0x02,
	0x5880, 0x81,
	0x5c00, 0x45,
	0x5c6d, 0x0A,
	0x5c7a, 0x43,
	0x5c7b, 0x45,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x01,
	0x0305, 0x30,
	0x4837, 0x0a,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x10,
	 0x3812, 0x00,
	 0x3813, 0x11,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x04,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_custom2[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x01,
	0x3500, 0x00,
	0x3501, 0x09,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x11,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x0F,
	0x3703, 0x35,
	0x3706, 0x2A,
	0x3709, 0x7A,
	0x370b, 0x62,
	0x3712, 0x50,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0xA0,
	0x3802, 0x03,
	0x3803, 0x50,
	0x3804, 0x1E,
	0x3805, 0xBF,
	0x3806, 0x14,
	0x3807, 0x3f,
	0x3808, 0x0F,
	0x3809, 0x00,
	0x380a, 0x08,
	0x380b, 0x70,
	0x380c, 0x04,
	0x380d, 0xb0,
	0x380e, 0x0c,
	0x380f, 0x80,
	0x3811, 0x09,
	0x3813, 0x04,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x02,
	0x3821, 0x06,
	0x3822, 0x10,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x18,
	0x383d, 0x09,
	0x3840, 0x00,
	0x3856, 0x00,
	0x3857, 0x00,
	0x3858, 0x00,
	0x3859, 0x00,
	0x4002, 0x13,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC0,
	0x4641, 0x3c,
	0x4643, 0x0C,
	0x480e, 0x04,
	0x484b, 0x27,
	0x5000, 0xcD,
	0x5001, 0x23,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x00,
	0x0305, 0xf8,
	0x4837, 0x0d,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x05,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x06,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_custom3[] = {
	0x0344, 0x00,
	0x0345, 0xC8,
	0x0350, 0x00,
	0x3500, 0x00,
	0x3501, 0x16,
	0x3502, 0xF4,
	0x3608, 0x57,
	0x3622, 0x10,
	0x3624, 0x10,
	0x3639, 0xC8,
	0x363b, 0x09,
	0x363d, 0x23,
	0x363e, 0x45,
	0x3680, 0x00,
	0x3684, 0x02,
	0x3689, 0x07,
	0x368e, 0x00,
	0x3703, 0x4C,
	0x3706, 0x34,
	0x3709, 0x74,
	0x370b, 0x74,
	0x3712, 0x51,
	0x3714, 0x63,
	0x3729, 0x00,
	0x372b, 0x8A,
	0x373b, 0x40,
	0x373d, 0x46,
	0x375d, 0x0A,
	0x375e, 0x0A,
	0x37b2, 0x40,
	0x37b5, 0x46,
	0x37b7, 0x06,
	0x37b8, 0x08,
	0x37ba, 0x06,
	0x37bc, 0x08,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x00,
	0x3803, 0x00,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x17,
	0x3807, 0x8f,
	0x3808, 0x1F,
	0x3809, 0x40,
	0x380a, 0x17,
	0x380b, 0x70,
	0x380c, 0x07,
	0x380d, 0x50,
	0x380e, 0x18,
	0x380f, 0x08,
	0x3811, 0x11,
	0x3813, 0x10,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x30,
	0x381b, 0x00,
	0x381c, 0x01,
	0x381d, 0xd4,
	0x3820, 0x00,
	0x3821, 0x06,
	0x3822, 0x00,
	0x3824, 0x01,
	0x3825, 0xd4,
	0x3826, 0x30,
	0x3827, 0x00,
	0x3837, 0x2C,
	0x383d, 0x11,
	0x3840, 0x00,
	0x3856, 0x00,
	0x3857, 0x00,
	0x3858, 0x00,
	0x3859, 0x00,
	0x4002, 0xD3,
	0x4010, 0xF8,
	0x4016, 0x1F,
	0x4018, 0x0F,
	0x4510, 0x07,
	0x4600, 0x01,
	0x4601, 0x90,
	0x4641, 0x00,
	0x4643, 0x08,
	0x480e, 0x00,
	0x484b, 0x07,
	0x5000, 0xCB,
	0x5001, 0x43,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x02,
	0x5880, 0x81,
	0x5c00, 0x45,
	0x5c6d, 0x0A,
	0x5c7a, 0x43,
	0x5c7b, 0x45,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x01,
	0x0305, 0x30,
	0x4837, 0x0a,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x10,
	 0x3812, 0x00,
	 0x3813, 0x11,
	 0x383C, 0x00,
	 0x383D, 0x10,
	 0x3820, 0x04,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_custom4[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x00,
	0x3500, 0x00,
	0x3501, 0x03,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x18,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x02,
	0x3689, 0x07,
	0x368e, 0x00,
	0x3703, 0x3A,
	0x3706, 0x2A,
	0x3709, 0x9A,
	0x370b, 0x6A,
	0x3712, 0x50,
	0x3714, 0x61,
	0x3729, 0x00,
	0x372b, 0x8a,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x02,
	0x3803, 0xF0,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x14,
	0x3807, 0x9F,
	0x3808, 0x07,
	0x3809, 0xD0,
	0x380A, 0x04,
	0x380B, 0x68,
	0x380c, 0x01,
	0x380d, 0x80,
	0x380e, 0x04,
	0x380f, 0xea,
	0x3811, 0x05,
	0x3813, 0x02,
	0x3814, 0x31,
	0x3815, 0x31,
	0x381a, 0x02,
	0x381b, 0x6d,
	0x381c, 0x01,
	0x381d, 0x60,
	0x3820, 0x42,
	0x3821, 0x1d,
	0x3822, 0x08,
	0x3824, 0x01,
	0x3825, 0x60,
	0x3826, 0x02,
	0x3827, 0x6d,
	0x3837, 0x05,
	0x383d, 0x05,
	0x3840, 0x00,
	0x3856, 0x00,
	0x3857, 0x00,
	0x3858, 0x00,
	0x3859, 0x00,
	0x4002, 0xD3,
	0x4010, 0xe8,
	0x4016, 0x07,
	0x4018, 0x01,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0x64,
	0x4641, 0x00,
	0x4643, 0x08,
	0x480e, 0x00,
	0x484b, 0x07,
	0x5000, 0x89,
	0x5001, 0x02,
	0x5002, 0x92,
	0x5185, 0x0B,
	0x5187, 0x88,
	0x5188, 0x18,
	0x5198, 0x88,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x00,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x01,
	0x0305, 0x75,
	0x4837, 0x09,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xfa,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x0d,//pclk_period[7:0], global timing for 1.200Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x04,
	 0x3812, 0x00,
	 0x3813, 0x03,
	 0x383C, 0x00,
	 0x383D, 0x04,
	 0x3820, 0x46,
	 0x3821, 0x19,
	 0x3680, 0x04,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};

kal_uint16 addr_data_pair_custom5[] = {
	0x0344, 0x01,
	0x0345, 0x04,
	0x0350, 0x01,
	0x3500, 0x00,
	0x3501, 0x09,
	0x3502, 0x00,
	0x3608, 0x35,
	0x3622, 0x11,
	0x3624, 0x18,
	0x3639, 0xC0,
	0x363b, 0x0B,
	0x363d, 0x25,
	0x363e, 0x47,
	0x3680, 0x00,
	0x3684, 0x07,
	0x3689, 0x27,
	0x368e, 0x0F,
	0x3703, 0x35,
	0x3706, 0x2A,
	0x3709, 0x7A,
	0x370b, 0x62,
	0x3712, 0x50,
	0x3714, 0x63,
	0x3729, 0x01,
	0x372b, 0x8A,
	0x373b, 0x20,
	0x373d, 0x26,
	0x375d, 0x02,
	0x375e, 0x02,
	0x37b2, 0x30,
	0x37b5, 0x36,
	0x37b7, 0x00,
	0x37b8, 0x00,
	0x37ba, 0x00,
	0x37bc, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x01,
	0x3803, 0x90,
	0x3804, 0x1F,
	0x3805, 0x5F,
	0x3806, 0x15,
	0x3807, 0xff,
	0x3808, 0x0F,
	0x3809, 0xA0,
	0x380a, 0x0A,
	0x380b, 0x28,
	0x380c, 0x04,
	0x380d, 0xb0,
	0x380e, 0x0c,
	0x380f, 0x80,
	0x3811, 0x09,
	0x3813, 0x08,
	0x3814, 0x11,
	0x3815, 0x11,
	0x381a, 0x18,
	0x381b, 0xf0,
	0x381c, 0x01,
	0x381d, 0x2c,
	0x3820, 0x02,
	0x3821, 0x06,
	0x3822, 0x10,
	0x3824, 0x01,
	0x3825, 0x2c,
	0x3826, 0x18,
	0x3827, 0xf0,
	0x3837, 0x18,
	0x383d, 0x09,
	0x3840, 0x00,
	0x3856, 0x20,
	0x3857, 0x04,
	0x3858, 0x40,
	0x3859, 0x08,
	0x4002, 0x13,
	0x4010, 0xE8,
	0x4016, 0x0F,
	0x4018, 0x07,
	0x4510, 0x00,
	0x4600, 0x00,
	0x4601, 0xC8,
	0x4641, 0x3E,
	0x4643, 0x0C,
	0x480e, 0x04,
	0x484b, 0x27,
	0x5000, 0xcD,
	0x5001, 0x23,
	0x5002, 0x9E,
	0x5185, 0x0B,
	0x5187, 0x00,
	0x5188, 0x08,
	0x5198, 0x08,
	0x533d, 0x00,
	0x5880, 0x81,
	0x5c00, 0x41,
	0x5c6d, 0x02,
	0x5c7a, 0x42,
	0x5c7b, 0x24,
	0x5d0e, 0x02,
	0x5d0f, 0x06,
	0x5d10, 0x02,
	0x0304, 0x00,
	0x0305, 0xf8,
	0x4837, 0x0d,
	0x3046, 0x01,
#ifdef CPHY_3TRIO
/* C-Phy init setting */
	 0x0301, 0xc0,//bit[3]: pll_divpix
	 0x0304, 0x00,//pll_divp[9:8]
	 0x0305, 0xa6,//pll_divp[7:0]
	 0x0306, 0x03,//3: 3-trio, 4: 4-lane
	 0x4837, 0x14,//pclk_period[7:0], global timing for 0.800Gsps
	 0x3012, 0x31,//bit[7:4] 3: 3-trio, 4: 4-lane
	 0x4802, 0x02,//bit[1]: hs_trail_sel
	 0x4850, 0x40,//bit[0]: DHY1.2
	 0x481b, 0x20,//CPHY Post = 32*7 UI
	 0x4826, 0x60,//CPHY HS_Prepare = 96 ns
	 0x4831, 0x60,//CPHY HS_Prepare
	 0x4860, 0x01,//CPHY enable
	 0x4861, 0xef,//CPHY control
	 0x4862, 0x20,//CPHY Preamble = 32*7 (pre-begin) + 7 (pre-end)UI
	 0x4883, 0x23,//CPHY control
	 0x4888, 0x80,//CPHY control
	 0x4889, 0x01,//CPHY control
#endif
#ifdef ROTATION_180
/* PD setting when mirror on */
	 0x3680, 0x04,
	 0x3810, 0x00,
	 0x3811, 0x08,
	 0x3812, 0x00,
	 0x3813, 0x09,
	 0x383C, 0x00,
	 0x383D, 0x08,
	 0x3820, 0x06,
	 0x3821, 0x02,
	 0x5004, 0x03,
	 0x5C01, 0x05,
	 0x5C44, 0x10,
	 0x5C45, 0x0f,
	 0x5C46, 0x0e,
	 0x5C47, 0x0d,
	 0x5C48, 0x0c,
	 0x5C49, 0x04,
	 0x5C4A, 0x03,
	 0x5C4B, 0x0b,
	 0x5C4C, 0x0a,
	 0x5C4D, 0x02,
	 0x5C4E, 0x01,
	 0x5C4F, 0x09,
	 0x5C50, 0x08,
	 0x5C51, 0x07,
	 0x5C52, 0x06,
	 0x5C53, 0x05,
#endif
};
#ifdef SEAMLESS_SWITCH_V2
kal_uint16 addr_data_pair_seamless_switch_step1_ov48b2q[] = {
	//group 0
	0x3208, 0x00,
	0x3016, 0xf1,
	//new mode settings
};

kal_uint16 addr_data_pair_seamless_switch_step2_ov48b2q[] = {
	0x3016, 0xf0,
	0x3208, 0x10,
	//group 1
	0x3208, 0x01,
	//0x3016, 0xf1,
	//new gain for 2nd frame
};
kal_uint16 addr_data_pair_seamless_switch_step3_ov48b2q[] = {
	//0x3016, 0xf0,
	0x3208, 0x11,

	//group 2 - intend to be blank
	0x3208, 0x02,
	0x3208, 0x12,

	//group 3 - intend to be blank
	0x3208, 0x03,
	0x3208, 0x13,

	//switch
	0x3689, 0x37,
	0x320d, 0x07,
	0x3209, 0x01,
	0x320a, 0x01,
	0x320b, 0x01,
	0x320c, 0x01,
	0x320e, 0xa0,
};
#else
kal_uint16 addr_data_pair_seamless_switch_step1_ov48b2q[] = {
	//group 0 intend to be blank
	0x3208, 0x00,
	0x3208, 0x10,
	//group 1
	0x3208, 0x01,
	0x3016, 0xf1,
	//new mode settings
};

kal_uint16 addr_data_pair_seamless_switch_step2_ov48b2q[] = {
	0x3016, 0xf0,
	0x3208, 0x11,
	0x3208, 0x02,
	//0x3016, 0xf1,
	//new gain for 2nd frame
};
kal_uint16 addr_data_pair_seamless_switch_step3_ov48b2q[] = {
	//0x3016, 0xf0,
	0x3208, 0x12,

	//group 3 - intend to be blank
	0x3208, 0x03,
	0x3208, 0x13,

	//switch
	0x3689, 0x37,
	0x320d, 0x07,
	0x3209, 0x01,
	0x320a, 0x01,
	0x320b, 0x01,
	0x320c, 0x01,
	0x320e, 0xa0,
};
#endif
#endif
