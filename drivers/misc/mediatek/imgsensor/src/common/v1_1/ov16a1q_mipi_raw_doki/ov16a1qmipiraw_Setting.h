/*
 *   OV16A1Q_AM06_20200107
 */
// generated by sensor driver assistant.
#ifndef _OV16A1QMIPIRAW_SETTING_H
#define _OV16A1QMIPIRAW_SETTING_H
#include "ov16a1qmipiraw_Sensor.h"

static void write_cmos_sensor(kal_uint16 addr, kal_uint8 para);
static kal_uint16 read_cmos_sensor(kal_uint16 addr);
static kal_uint16 table_write_cmos_sensor(kal_uint16 *para, kal_uint32 len);

static kal_uint16 init_setting[] = {
    0x0103, 0x01,
    0x0102, 0x01,
    0x0301, 0x48,
    0x0302, 0x31,
    0x0303, 0x04,
    0x0305, 0xC2,
    0x0306, 0x00,
    0x0320, 0x02,
    0x0323, 0x04,
    0x0326, 0xD8,
    0x0327, 0x0B,
    0x0329, 0x01,
    0x0343, 0x04,
    0x0344, 0x01,
    0x0345, 0x2C,
    0x0346, 0xC0,
    0x034A, 0x07,
    0x300E, 0x22,
    0x3012, 0x41,
    0x3016, 0xD2,
    0x3018, 0x70,
    0x301E, 0x98,
    0x3025, 0x03,
    0x3026, 0x10,
    0x3027, 0x08,
    0x3102, 0x00,
    0x3400, 0x04,
    0x3406, 0x04,
    0x3408, 0x04,
    0x3421, 0x09,
    0x3422, 0x20,
    0x3423, 0x15,
    0x3424, 0x40,
    0x3425, 0x14,
    0x3426, 0x04,
    0x3504, 0x08,
    0x3508, 0x01,
    0x3509, 0x00,
    0x350A, 0x01,
    0x350B, 0x00,
    0x350C, 0x00,
    0x3548, 0x01,
    0x3549, 0x00,
    0x354A, 0x01,
    0x354B, 0x00,
    0x354C, 0x00,
    0x3600, 0xFF,
    0x3602, 0x42,
    0x3603, 0x7B,
    0x3608, 0x9B,
    0x360A, 0x69,
    0x360B, 0x53,
    0x3618, 0xC0,
    0x361A, 0x8B,
    0x361D, 0x20,
    0x361E, 0x30,
    0x361F, 0x01,
    0x3620, 0x89,
    0x3624, 0x8F,
    0x3629, 0x09,
    0x362E, 0x50,
    0x3631, 0xE2,
    0x3632, 0xE2,
    0x3634, 0x10,
    0x3635, 0x10,
    0x3636, 0x10,
    0x3639, 0xA6,
    0x363A, 0xAA,
    0x363B, 0x0C,
    0x363C, 0x16,
    0x363D, 0x29,
    0x363E, 0x4F,
    0x3642, 0xA8,
    0x3652, 0x00,
    0x3653, 0x00,
    0x3654, 0x8A,
    0x3656, 0x0C,
    0x3657, 0x8E,
    0x3660, 0x80,
    0x3663, 0x00,
    0x3664, 0x00,
    0x3668, 0x05,
    0x3669, 0x05,
    0x370D, 0x10,
    0x370E, 0x05,
    0x370F, 0x10,
    0x3711, 0x01,
    0x3712, 0x09,
    0x3713, 0x40,
    0x3714, 0xE4,
    0x3716, 0x04,
    0x3717, 0x01,
    0x3718, 0x02,
    0x3719, 0x01,
    0x371A, 0x02,
    0x371B, 0x02,
    0x371C, 0x01,
    0x371D, 0x02,
    0x371E, 0x12,
    0x371F, 0x02,
    0x3720, 0x14,
    0x3721, 0x12,
    0x3722, 0x44,
    0x3723, 0x60,
    0x372F, 0x34,
    0x3726, 0x21,
    0x37D0, 0x02,
    0x37D1, 0x10,
    0x37DB, 0x08,
    0x3808, 0x12,
    0x3809, 0x30,
    0x380A, 0x0D,
    0x380B, 0xA8,
    0x380C, 0x03,
    0x380D, 0x52,
    0x380E, 0x0F,
    0x380F, 0x51,
    0x3814, 0x11,
    0x3815, 0x11,
    0x3820, 0x00,
    0x3821, 0x06,
    0x3822, 0x00,
    0x3823, 0x04,
    0x3837, 0x10,
    0x383C, 0x34,
    0x383D, 0xFF,
    0x383E, 0x0D,
    0x383F, 0x22,
    0x3857, 0x00,
    0x388F, 0x00,
    0x3890, 0x00,
    0x3891, 0x00,
    0x3D81, 0x10,
    0x3D83, 0x0C,
    0x3D84, 0x00,
    0x3D85, 0x1B,
    0x3D88, 0x00,
    0x3D89, 0x00,
    0x3D8A, 0x00,
    0x3D8B, 0x01,
    0x3D8C, 0x77,
    0x3D8D, 0xA0,
    0x3F00, 0x02,
    0x3F0C, 0x07,
    0x3F0D, 0x2F,
    0x4012, 0x0D,
    0x4015, 0x04,
    0x4016, 0x1B,
    0x4017, 0x04,
    0x4018, 0x0B,
    0x401B, 0x1F,
    0x401E, 0x01,
    0x401F, 0x38,
    0x4500, 0x20,
    0x4501, 0x6A,
    0x4502, 0xB4,
    0x4586, 0x00,
    0x4588, 0x02,
    0x4640, 0x01,
    0x4641, 0x04,
    0x4643, 0x00,
    0x4645, 0x03,
    0x4806, 0x40,
    0x480E, 0x00,
    0x4815, 0x2B,
    0x481B, 0x3C,
    0x4833, 0x18,
    0x4837, 0x08,
    0x484B, 0x07,
    0x4850, 0x41,
    0x4860, 0x00,
    0x4861, 0xEC,
    0x4864, 0x00,
    0x4883, 0x00,
    0x4885, 0x0f,
    0x4888, 0x10,
    0x4A00, 0x10,
    0x4E00, 0x00,
    0x4E01, 0x04,
    0x4E02, 0x01,
    0x4E03, 0x00,
    0x4E04, 0x08,
    0x4E05, 0x04,
    0x4E06, 0x00,
    0x4E07, 0x13,
    0x4E08, 0x01,
    0x4E09, 0x00,
    0x4E0A, 0x15,
    0x4E0B, 0x0E,
    0x4E0C, 0x00,
    0x4E0D, 0x17,
    0x4E0E, 0x07,
    0x4E0F, 0x00,
    0x4E10, 0x19,
    0x4E11, 0x06,
    0x4E12, 0x00,
    0x4E13, 0x1B,
    0x4E14, 0x08,
    0x4E15, 0x00,
    0x4E16, 0x1F,
    0x4E17, 0x08,
    0x4E18, 0x00,
    0x4E19, 0x21,
    0x4E1A, 0x0E,
    0x4E1B, 0x00,
    0x4E1C, 0x2D,
    0x4E1D, 0x30,
    0x4E1E, 0x00,
    0x4E1F, 0x6A,
    0x4E20, 0x05,
    0x4E21, 0x00,
    0x4E22, 0x6C,
    0x4E23, 0x05,
    0x4E24, 0x00,
    0x4E25, 0x6E,
    0x4E26, 0x39,
    0x4E27, 0x00,
    0x4E28, 0x7A,
    0x4E29, 0x6D,
    0x4E2A, 0x00,
    0x4E2B, 0x00,
    0x4E2C, 0x00,
    0x4E2D, 0x00,
    0x4E2E, 0x00,
    0x4E2F, 0x00,
    0x4E30, 0x00,
    0x4E31, 0x00,
    0x4E32, 0x00,
    0x4E33, 0x00,
    0x4E34, 0x00,
    0x4E35, 0x00,
    0x4E36, 0x00,
    0x4E37, 0x00,
    0x4E38, 0x00,
    0x4E39, 0x00,
    0x4E3A, 0x00,
    0x4E3B, 0x00,
    0x4E3C, 0x00,
    0x4E3D, 0x00,
    0x4E3E, 0x00,
    0x4E3F, 0x00,
    0x4E40, 0x00,
    0x4E41, 0x00,
    0x4E42, 0x00,
    0x4E43, 0x00,
    0x4E44, 0x00,
    0x4E45, 0x00,
    0x4E46, 0x00,
    0x4E47, 0x00,
    0x4E48, 0x00,
    0x4E49, 0x00,
    0x4E4A, 0x00,
    0x4E4B, 0x00,
    0x4E4C, 0x00,
    0x4E4D, 0x00,
    0x4E4E, 0x00,
    0x4E4F, 0x00,
    0x4E50, 0x00,
    0x4E51, 0x00,
    0x4E52, 0x00,
    0x4E53, 0x00,
    0x4E54, 0x00,
    0x4E55, 0x00,
    0x4E56, 0x00,
    0x4E57, 0x00,
    0x4E58, 0x00,
    0x4E59, 0x00,
    0x4E5A, 0x00,
    0x4E5B, 0x00,
    0x4E5C, 0x00,
    0x4E5D, 0x00,
    0x4E5E, 0x00,
    0x4E5F, 0x00,
    0x4E60, 0x00,
    0x4E61, 0x00,
    0x4E62, 0x00,
    0x4E63, 0x00,
    0x4E64, 0x00,
    0x4E65, 0x00,
    0x4E66, 0x00,
    0x4E67, 0x00,
    0x4E68, 0x00,
    0x4E69, 0x00,
    0x4E6A, 0x00,
    0x4E6B, 0x00,
    0x4E6C, 0x00,
    0x4E6D, 0x00,
    0x4E6E, 0x00,
    0x4E6F, 0x00,
    0x4E70, 0x00,
    0x4E71, 0x00,
    0x4E72, 0x00,
    0x4E73, 0x00,
    0x4E74, 0x00,
    0x4E75, 0x00,
    0x4E76, 0x00,
    0x4E77, 0x00,
    0x4E78, 0x1C,
    0x4E79, 0x1E,
    0x4E7A, 0x00,
    0x4E7B, 0x00,
    0x4E7C, 0x2C,
    0x4E7D, 0x2F,
    0x4E7E, 0x79,
    0x4E7F, 0x7B,
    0x4E80, 0x0A,
    0x4E81, 0x31,
    0x4E82, 0x66,
    0x4E83, 0x81,
    0x4E84, 0x03,
    0x4E85, 0x40,
    0x4E86, 0x02,
    0x4E87, 0x09,
    0x4E88, 0x43,
    0x4E89, 0x53,
    0x4E8A, 0x32,
    0x4E8B, 0x67,
    0x4E8C, 0x05,
    0x4E8D, 0x83,
    0x4E8E, 0x00,
    0x4E8F, 0x00,
    0x4E90, 0x00,
    0x4E91, 0x00,
    0x4E92, 0x00,
    0x4E93, 0x00,
    0x4E94, 0x00,
    0x4E95, 0x00,
    0x4E96, 0x00,
    0x4E97, 0x00,
    0x4E98, 0x00,
    0x4E99, 0x00,
    0x4E9A, 0x00,
    0x4E9B, 0x00,
    0x4E9C, 0x00,
    0x4E9D, 0x00,
    0x4E9E, 0x00,
    0x4E9F, 0x00,
    0x4EA0, 0x00,
    0x4EA1, 0x00,
    0x4EA2, 0x00,
    0x4EA3, 0x00,
    0x4EA4, 0x00,
    0x4EA5, 0x00,
    0x4EA6, 0x1E,
    0x4EA7, 0x20,
    0x4EA8, 0x32,
    0x4EA9, 0x6D,
    0x4EAA, 0x18,
    0x4EAB, 0x7F,
    0x4EAC, 0x00,
    0x4EAD, 0x00,
    0x4EAE, 0x7C,
    0x4EAF, 0x07,
    0x4EB0, 0x7C,
    0x4EB1, 0x07,
    0x4EB2, 0x07,
    0x4EB3, 0x1C,
    0x4EB4, 0x07,
    0x4EB5, 0x1C,
    0x4EB6, 0x07,
    0x4EB7, 0x1C,
    0x4EB8, 0x07,
    0x4EB9, 0x1C,
    0x4EBA, 0x07,
    0x4EBB, 0x14,
    0x4EBC, 0x07,
    0x4EBD, 0x1C,
    0x4EBE, 0x07,
    0x4EBF, 0x1C,
    0x4EC0, 0x07,
    0x4EC1, 0x1C,
    0x4EC2, 0x07,
    0x4EC3, 0x1C,
    0x4EC4, 0x2C,
    0x4EC5, 0x2F,
    0x4EC6, 0x79,
    0x4EC7, 0x7B,
    0x4EC8, 0x7C,
    0x4EC9, 0x07,
    0x4ECA, 0x7C,
    0x4ECB, 0x07,
    0x4ECC, 0x00,
    0x4ECD, 0x00,
    0x4ECE, 0x07,
    0x4ECF, 0x31,
    0x4ED0, 0x69,
    0x4ED1, 0x7F,
    0x4ED2, 0x67,
    0x4ED3, 0x00,
    0x4ED4, 0x00,
    0x4ED5, 0x00,
    0x4ED6, 0x7C,
    0x4ED7, 0x07,
    0x4ED8, 0x7C,
    0x4ED9, 0x07,
    0x4EDA, 0x33,
    0x4EDB, 0x7F,
    0x4EDC, 0x00,
    0x4EDD, 0x16,
    0x4EDE, 0x00,
    0x4EDF, 0x00,
    0x4EE0, 0x32,
    0x4EE1, 0x70,
    0x4EE2, 0x01,
    0x4EE3, 0x30,
    0x4EE4, 0x22,
    0x4EE5, 0x28,
    0x4EE6, 0x6F,
    0x4EE7, 0x75,
    0x4EE8, 0x00,
    0x4EE9, 0x00,
    0x4EEA, 0x30,
    0x4EEB, 0x7F,
    0x4EEC, 0x00,
    0x4EED, 0x00,
    0x4EEE, 0x00,
    0x4EEF, 0x00,
    0x4EF0, 0x69,
    0x4EF1, 0x7F,
    0x4EF2, 0x07,
    0x4EF3, 0x30,
    0x4EF4, 0x32,
    0x4EF5, 0x09,
    0x4EF6, 0x7D,
    0x4EF7, 0x65,
    0x4EF8, 0x00,
    0x4EF9, 0x00,
    0x4EFA, 0x00,
    0x4EFB, 0x00,
    0x4EFC, 0x7F,
    0x4EFD, 0x09,
    0x4EFE, 0x7F,
    0x4EFF, 0x09,
    0x4F00, 0x1E,
    0x4F01, 0x7C,
    0x4F02, 0x7F,
    0x4F03, 0x09,
    0x4F04, 0x7F,
    0x4F05, 0x0B,
    0x4F06, 0x7C,
    0x4F07, 0x02,
    0x4F08, 0x7C,
    0x4F09, 0x02,
    0x4F0A, 0x32,
    0x4F0B, 0x64,
    0x4F0C, 0x32,
    0x4F0D, 0x64,
    0x4F0E, 0x32,
    0x4F0F, 0x64,
    0x4F10, 0x32,
    0x4F11, 0x64,
    0x4F12, 0x31,
    0x4F13, 0x4F,
    0x4F14, 0x83,
    0x4F15, 0x84,
    0x4F16, 0x63,
    0x4F17, 0x64,
    0x4F18, 0x83,
    0x4F19, 0x84,
    0x4F1A, 0x31,
    0x4F1B, 0x32,
    0x4F1C, 0x7B,
    0x4F1D, 0x7C,
    0x4F1E, 0x2F,
    0x4F1F, 0x30,
    0x4F20, 0x30,
    0x4F21, 0x69,
    0x4D06, 0x08,
    0x5000, 0x01,
    0x5001, 0x40,
    0x5002, 0x53,
    0x5003, 0x42,
    0x5004, 0x08,
    0x5005, 0x00,
    0x5012, 0x60,
    0x5038, 0x00,
    0x5081, 0x00,
    0x5180, 0x00,
    0x5181, 0x10,
    0x5182, 0x07,
    0x5183, 0x8F,
    0x5184, 0x03,
    0x5208, 0xC2,
    0x5820, 0xC5,
    0x5854, 0x00,
    0x58CB, 0x03,
    0x5BD0, 0x15,
    0x5BD1, 0x02,
    0x5C0E, 0x11,
    0x5C11, 0x00,
    0x5C16, 0x02,
    0x5C17, 0x01,
    0x5C1A, 0x04,
    0x5C1B, 0x03,
    0x5C21, 0x10,
    0x5C22, 0x10,
    0x5C23, 0x04,
    0x5C24, 0x0C,
    0x5C25, 0x04,
    0x5C26, 0x0C,
    0x5C27, 0x04,
    0x5C28, 0x0C,
    0x5C29, 0x04,
    0x5C2A, 0x0C,
    0x5C2B, 0x01,
    0x5C2C, 0x01,
    0x5C2E, 0x08,
    0x5C30, 0x04,
    0x5C35, 0x03,
    0x5C36, 0x03,
    0x5C37, 0x03,
    0x5C38, 0x03,
    0x5D00, 0xFF,
    0x5D01, 0x0F,
    0x5D02, 0x80,
    0x5D03, 0x44,
    0x5D05, 0xFC,
    0x5D06, 0x0B,
    0x5D08, 0x10,
    0x5D09, 0x10,
    0x5D0A, 0x04,
    0x5D0B, 0x0C,
    0x5D0C, 0x04,
    0x5D0D, 0x0C,
    0x5D0E, 0x04,
    0x5D0F, 0x0C,
    0x5D10, 0x04,
    0x5D11, 0x0C,
    0x5D12, 0x01,
    0x5D13, 0x01,
    0x5D15, 0x10,
    0x5D16, 0x10,
    0x5D17, 0x10,
    0x5D18, 0x10,
    0x5D1A, 0x10,
    0x5D1B, 0x10,
    0x5D1C, 0x10,
    0x5D1D, 0x10,
    0x5D1E, 0x04,
    0x5D1F, 0x04,
    0x5D20, 0x04,
    0x5D27, 0x64,
    0x5D28, 0xC8,
    0x5D29, 0x96,
    0x5D2A, 0xFF,
    0x5D2B, 0xC8,
    0x5D2C, 0xFF,
    0x5D2D, 0x04,
    0x5D34, 0x00,
    0x5D35, 0x08,
    0x5D36, 0x00,
    0x5D37, 0x04,
    0x5D4A, 0x00,
    0x5D4C, 0x00,
};
static void load_init_setting(void)
{
    table_write_cmos_sensor(init_setting,
        sizeof(init_setting)/sizeof(kal_uint16));
}

static kal_uint16 preview_setting[] = {
    // 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_preview_setting(void)
{
    table_write_cmos_sensor(preview_setting,
        sizeof(preview_setting)/sizeof(kal_uint16));
}

static kal_uint16 capture_setting[] = {
    // 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_capture_setting(void)
{
    table_write_cmos_sensor(capture_setting,
        sizeof(capture_setting)/sizeof(kal_uint16));
}

static kal_uint16 normal_video_setting[] = {
    // 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_normal_video_setting(void)
{
    table_write_cmos_sensor(normal_video_setting,
        sizeof(normal_video_setting)/sizeof(kal_uint16));
}

static kal_uint16 high_speed_video_setting[] = {
    // 1280x720_120fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x05,
    0x3809, 0x00,
    0x380a, 0x02,
    0x380b, 0xd0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x03,
    0x380f, 0xd4,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x62,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x03,
    0x3502, 0xcc,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_high_speed_video_setting(void)
{
    table_write_cmos_sensor(high_speed_video_setting,
        sizeof(high_speed_video_setting)/sizeof(kal_uint16));
}

static kal_uint16 slim_video_setting[] = {
	// 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_slim_video_setting(void)
{
    table_write_cmos_sensor(slim_video_setting,
        sizeof(slim_video_setting)/sizeof(kal_uint16));
}

static kal_uint16 custom1_setting[] = {
    // 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_custom1_setting(void)
{
    table_write_cmos_sensor(custom1_setting,
        sizeof(custom1_setting)/sizeof(kal_uint16));
}

static kal_uint16 custom2_setting[] = {
    // 2304x1728_30fps_726Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x01,
    0x4837, 0x15,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x75,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0x93,
    0x363a, 0x99,
    0x3642, 0x98,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x08,
    0x3713, 0xc0,
    0x3714, 0xe2,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x04,
    0x3808, 0x09,
    0x3809, 0x00,
    0x380a, 0x06,
    0x380b, 0xc0,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x22,
    0x3815, 0x22,
    0x3820, 0x01,
    0x3821, 0x0c,
    0x3822, 0x00,
    0x383c, 0x22,
    0x383f, 0x33,
    0x4015, 0x02,
    0x4016, 0x0d,
    0x4017, 0x00,
    0x4018, 0x07,
    0x401b, 0x1f,
    0x401f, 0xfe,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xe4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x25,
    0x4e26, 0x44,
    0x4e29, 0x6d,
    0x5000, 0x09,
    0x5001, 0x42,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x19,
    0x5c0e, 0x13,
    0x5c11, 0x00,
    0x5c16, 0x01,
    0x5c17, 0x00,
    0x5c1a, 0x00,
    0x5c1b, 0x00,
    0x5c21, 0x08,
    0x5c22, 0x08,
    0x5c23, 0x02,
    0x5c24, 0x06,
    0x5c25, 0x02,
    0x5c26, 0x06,
    0x5c27, 0x02,
    0x5c28, 0x06,
    0x5c29, 0x02,
    0x5c2a, 0x06,
    0x5c2b, 0x00,
    0x5c2c, 0x00,
    0x5d01, 0x07,
    0x5d08, 0x08,
    0x5d09, 0x08,
    0x5d0a, 0x02,
    0x5d0b, 0x06,
    0x5d0c, 0x02,
    0x5d0d, 0x06,
    0x5d0e, 0x02,
    0x5d0f, 0x06,
    0x5d10, 0x02,
    0x5d11, 0x06,
    0x5d12, 0x00,
    0x5d13, 0x00,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_custom2_setting(void)
{
    table_write_cmos_sensor(custom2_setting,
        sizeof(custom2_setting)/sizeof(kal_uint16));
}

static kal_uint16 custom3_setting[] = {
    // 4608x3456_30fps_1452Mbps/lane
    0x0305, 0x6b,
    0x0307, 0x00,
    0x4837, 0x0b,
    0x0329, 0x01,
    0x0344, 0x01,
    0x0345, 0x2c,
    0x034a, 0x07,
    0x3608, 0x9b,
    0x360a, 0x69,
    0x361a, 0x8b,
    0x361e, 0x30,
    0x3639, 0xa6,
    0x363a, 0xaa,
    0x3642, 0xa8,
    0x3654, 0x8a,
    0x3656, 0x0c,
    0x3663, 0x00,
    0x370e, 0x05,
    0x3712, 0x09,
    0x3713, 0x40,
    0x3714, 0xe4,
    0x37d0, 0x02,
    0x37d1, 0x10,
    0x37db, 0x08,
    0x3808, 0x12,
    0x3809, 0x00,
    0x380a, 0x0d,
    0x380b, 0x80,
    0x380c, 0x03,
    0x380d, 0x52,
    0x380e, 0x0f,
    0x380f, 0x50,
    0x3814, 0x11,
    0x3815, 0x11,
    0x3820, 0x00,
    0x3821, 0x06,
    0x3822, 0x00,
    0x383c, 0x34,
    0x383f, 0x22,
    0x4015, 0x04,
    0x4016, 0x1b,
    0x4017, 0x04,
    0x4018, 0x0b,
    0x401b, 0x1f,
    0x401f, 0x38,
    0x4500, 0x20,
    0x4501, 0x6a,
    0x4502, 0xb4,
    0x4e05, 0x04,
    0x4e11, 0x06,
    0x4e1d, 0x30,
    0x4e26, 0x39,
    0x4e29, 0x6d,
    0x5000, 0x01,
    0x5001, 0x40,
    0x5003, 0x42,
    0x5820, 0xc5,
    0x5854, 0x00,
    0x5bd0, 0x15,
    0x5c0e, 0x11,
    0x5c11, 0x00,
    0x5c16, 0x02,
    0x5c17, 0x01,
    0x5c1a, 0x04,
    0x5c1b, 0x03,
    0x5c21, 0x10,
    0x5c22, 0x10,
    0x5c23, 0x04,
    0x5c24, 0x0c,
    0x5c25, 0x04,
    0x5c26, 0x0c,
    0x5c27, 0x04,
    0x5c28, 0x0c,
    0x5c29, 0x04,
    0x5c2a, 0x0c,
    0x5c2b, 0x01,
    0x5c2c, 0x01,
    0x5d01, 0x0f,
    0x5d08, 0x10,
    0x5d09, 0x10,
    0x5d0a, 0x04,
    0x5d0b, 0x0c,
    0x5d0c, 0x04,
    0x5d0d, 0x0c,
    0x5d0e, 0x04,
    0x5d0f, 0x0c,
    0x5d10, 0x04,
    0x5d11, 0x0c,
    0x5d12, 0x01,
    0x5d13, 0x01,
    0x3500, 0x00,
    0x3501, 0x0f,
    0x3502, 0x48,
    0x3508, 0x01,
    0x3509, 0x00,
};
static void load_custom3_setting(void)
{
    table_write_cmos_sensor(custom3_setting,
        sizeof(custom3_setting)/sizeof(kal_uint16));
}

#endif

